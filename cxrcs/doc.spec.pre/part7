
Пространства имен и префиксы

1. Внутри схемы исползьуются пространства имен и префиксы, отмеченные в xmlns. 


2. При анализе исходного типа, они ковертируются с учетом псевдонимив.

2.1 В том числе, в type/@name должен быть указан псевдоним (при его наличии, иначе - имя).


3. namespace/prefix определяют список префиксов, используемые для данного пространства имен 
_в исходном документе_ (не в схеме!).


3.1 Для каждого префикса указвыается способ его использования:

required: следует использовать его и только его (допустимо несколько префиксов со знаком #required. 
тогда можно использовать любой префикс из этого списка).

optional: (по умлчанию) можно использовать его или пустой префикс (для аттрибутов - только если 
пространство имен элемента и аттрибута совпадает. Иначе префикс небходим).

profibited: этот префикс использовать нельзя (имеет смысл, если рядом определен ##any, либо
для аттрибутов)

default: (для аттрибутов, по умолчанию) поведение по умолчанию: использовать тогда и только
тогда, когда пространство имен элемента и аттрибута не совпадает

any: (для аттрибутов) можно использовать или не исползьовать, в том числе для
чужих элементов (в нарушение спецификации).


3.2. Если определен ##any-префикс, допускается определения ряда других префиксов, как 
наиболее рекомендованых для использования.


3.3 Запись для пространсва имен по умолчанию для документа, совместимого со спецификацией
XML namespace, должна быт такой (алиас может быть любым, но этот - рекомендован):

<type name='colorer://alias.ns.xml/#default' xmlns:def='colorer://alias.ns.xml/#default'>
	<namespace uri='##default' alias='colorer://alias.ns.xml/#default'>
		<prefix name='##default' use='required'/>
	</namespace>

Если документ ее не соблюдает - использует префиксы без имен - следует определить
несколко псевдонимов для пустого пространства имен (по каждому на свой префикс).


3.4 Известные пространства имен.

xmlns - http://www.w3.org/2000/xmlns/ 
Определить _нельзя_ .


xml - http://www.w3.org/XML/1998/namespace
<namespace uri='http://www.w3.org/XML/1998/namespace'>
	<prefix name='xml' use='required' attrub-use='required'/>
</namespace>

Optional. Если документ ссылается на пространство имен xml - имеет смысл опрделить. Иначе - не нужен.
Решение для xsd - на всякий случай определять.


xs - http://www.w3.org/2001/XMLSchema
<namespace uri='http://www.w3.org/2001/XMLSchema'>
	<prefix name='xs'/>
	<prefix name='##any'/>
</namespace>

Optional. Если только схемы xml не есть часть документа - не нужен.
В самой схеме необходим. 
Решение для xsd - на всякий случай определять.


hrc - http://colorer.sf.net/2003/hrc
<namespace uri='http://colorer.sf.net/2003/hrc'>
	<prefix name='hrc'/>
	<prefix name='##any'/>
</namespace>
Optional. Нужен только если это часть колорера
В самой схеме необходим.
Решение для xsd - определять только если опрделено в исходном xsd.


xsi - http://www.w3.org/2001/XMLSchema-instance
<namespace uri='http://www.w3.org/2001/XMLSchema-instance'>
	<prefix name='xsi' use='required' attrib-use='required'/>
</namespace>
Может использоваться всеми документами, опрделенными через xsd.
При этом в каждый элемент схемы должна быть добавлена группа атрибутов xsi
Решене для xsd - (опционально) отедльный тип с доп. определением через import/redefine-all.


3.5 Несколько псевдонимов одного пространства
Используется общий список префиксов. Если записи противорчат друг другу - это считается ошибкой.


3.6 Если требуется префикс для неопределенного пространства имен — он определеется отдельно:
<cxr:namespace uri="##default" alias="colorer://alias.ns.xml/#default">
   <cxr:prefix name="##default" use="required"/>
</cxr:namespace>
<cxr:namespace uri="##default" alias="colorer://alias.ns.xml/foo">
   <cxr:prefix name="foo" use="required"/>
</cxr:namespace>
<cxr:namespace uri="##default" alias="colorer://alias.ns.xml/bar">
   <cxr:prefix name="bar" use="required"/>
</cxr:namespace>



4 Соответствие префиксов с xsd. (для примера испозльуется xmlns:pre='urn:foo')

4.1. В xsd коренвые элементы должны быть квалифициорванны.

Соответственно, если в xsd написано elementFormDefault="unqualified" _и_ определен отличый от нуля 
префикс пространства имен для @targetNamespace, все элементы - кроме коренвых - опрделены в ##default,
что и нужно отразить на схеме. (Если префикс не определен, то схема невалидна.)

<type name='urn:foo' xmlns:def='colorer://alias.ns.xml/#default' xmlns:pre='urn:foo'>
	<namespace uri='##default' alias='colorer://alias.ns.xml/#default'>
		<prefix name='##default' use='required'/>
	</namespace>
	<namespace uri='urn:foo'>
		<prefix name='pre' use='required'/>
		<prefix name='##any' use='required'/>
	</namespace>
	
	
4.2. Если @targetNamespace отсуствует, в ##default помещаются все элементы (см. выше)

4.3. Если имеем attributeFormDefault="qualified", то

<namespace uri='urn:foo'>
	<prefix name='pre'   attrib-use='required'/>
	<prefix name='##any' attrib-use='required'/>
</namespace>

4.4 Для префиксов xml, xs, xsi - см. выше.

4.5. Для всех префиксов, не совпадающих с @targetNamespace и вышеперечисленными (пусть будет xxx):

<namespace uri='urn:bar'>
	<prefix name='ххх'  />
	<prefix name='##any'/>
</namespace>
При этом в самой схеме должно быть прописано <import namespace='unr:bar'/>.
В частности, это верно для hrc.


5. Переопределение.

По умолчанию пространства имен при выполнении include и import _не_ наследуются.
Если установить аттрибут @inherit-ns в true - будут наследоваться те из них,
которые не переопределены (совпадают namespace и alias) в самом типе.


6. Исключения из правил для элементов и аттрибутов:

Аттрибут @use-prefix. Свойства такие же как для prefix/@use и prefix/@attrib-use соответственно.
Переопределяет правила для отдельног аттрибута/элемента.


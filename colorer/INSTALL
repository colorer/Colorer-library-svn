
  Installation and building instructions for the Colorer-take5 library.


  1. Requirements

    a. ANSI C++ compiler.
       By default, build files includes support for
       BCC5.5, VC6/VC7, CygWin, Linux/Unix GCC, MacOS GCC compilers.
       Used to build library binaries from source codes.
       Generally, this is the main and sole requirement.

    b. Doxygen - documentation system for C++ sources (http://www.doxygen.org).
       Used to extract documentation from source files.

    c. Apache ANT tool (http://ant.apache.org), version 1.5.1 or later.
       Used to automate build process, describes tasks for documentation generation,
       compilation, xml transformations and creating redistributable archives.

    d. Sun JDK 1.4.1 or later.
    e. XML and XSLT processors (included in JDK 1.4.1 distribution).
       Required by ANT and used for compilation of the Eclipse plugin,
       generation of javadoc documentation, and HRC codes.
    f. FOP package, used to generate library documentation in PDF.
    g. Eclipse platform jar files for building EclipseColorer.

    NOTE: You can build Colorer Library binaries without JDK and ANT, using
          makefiles directly. In this case you have to manually collect all
          the files, required for proper library working.


  2. Building

    a. To build all variants of library distribution you have to
       simply call ``ant'' in the colorer's root directory.
       This should call ANT build scripts and generate ZIP files
       with full library distribution, and also compact forms of the
       FAR Manager plugin and Eclipse plugin.

    b. Generally, before running ANT you have to configure build process
       to achieve proper generation and compilation. All configuration
       is placed in global 'build.properties' file. You can edit this
       file directly, or create 'build.user.properties' file with
       some properties, redefined there.

    c. First of all, you'll have to choose your platform for compilation of
       the native C++ libraries. You can do this with 'platform' property.

    d. Next, you need to fix all the paths, placed in this file. In particular
       you must have:
          d.1. Some XSD files (MathML, DocBook, XHTML).
               http://www.w3.org/Math/XMLSchema/
               http://www.oasis-open.org/committees/docbook/xmlschema/1.0b1/
               http://www.w3.org/TR/xhtml1/
          d.2. Doxygen documentation generation tool (doxygen.exe on win32).
               http://www.doxygen.org
          d.3  Norman's Walsh DocBook XSL Transformations.
               http://docbook.sf.net/
          d.4. Apache FOP processor.
               http://xml.apache.org/fop/
       If some of these resources are unavailable, you can tell colorer
       to ignore appropriate tasks, setting 'fail-on-bad-paths' into 'false'.
       In this case some of the build tasks would be ignored.
       
    e. When building Eclipse plugin, you need to specify
       'eclipse.dir' and 'eclipse.ws' properties, pointing to your eclipse
       installation directory and your Eclipse windowing system.
       Also, when building plugin's native part, you must have
       JAVA_HOME environment variable pointing to your JDK installation.


  3. Installation

    After build is finished, you'll get ready-to-use versions of Colorer-take5
    library:
      - FarColorer     - Extracted into the 'FAR/plugins' folder,
      - EclipseColorer - Extracted into your 'eclipse/plugins' folder,
      - Full Library   - Used as it is,
      - Linux package  - ready to compile and install linux version.


  Igor Russkih
    cail@nm.ru

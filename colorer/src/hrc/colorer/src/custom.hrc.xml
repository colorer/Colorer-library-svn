<?xml version="1.0" encoding="windows-1251"?>

<custom xmlns="uri:colorer:custom">

  <!-- Colorer HRC schema extension. Parse RE content -->

  <custom-type targetNamespace="http://colorer.sf.net/2003/hrc">

    <prefix>hrc</prefix>
    <empty-prefix/>
    <contributors>Cail Lomecb, Eugene Efremov</contributors>

    <outline>
      <element name='type' extract='withAttribute' description='Type definition'/>
      <element name='package' extract='withAttribute' description='Package definition'/>
      <element name='prototype' extract='withAttribute' description='Prototype definition'/>
      <element name='import' extract='withAttribute' description='Type Import'/>
      <element name='region' extract='withAttribute' description='Region definition'/>
      <element name='entity' extract='withAttribute' description='Entity definition'/>
      <element name='scheme' extract='withAttribute' description='Scheme declaration'/>
      <element name='keywords' extract='withAttribute' description='Keywords list'/>
    </outline>

    <type xmlns="http://colorer.sf.net/2003/hrc">

      <!--
      <region name="Entity"    parent="xml:EntityRef"/>
      <region name="op"        parent="Operator"/>
      <region name="EscapeSeq" parent="StringContent"/>
      <region name="NamedRegion"  parent="StringContent"/>
      -->
      <region name="BracketStart" parent="StringEdge"/>
      <region name="BracketEnd"   parent="StringEdge"/>
      <region name="Scheme.nsprefix" parent="xml:Attribute.nsprefix"/>
      <region name="Scheme.nscolon" parent="xml:Attribute.nscolon"/>
      <region name="Scheme.name" parent="def:String"/>
      <!--

      <scheme name="QName-content">
        <inherit scheme="xmlschema:QName-content"/>
      </scheme>-->
      
      <scheme name="HRC-String">
       <inherit scheme="xml:Reference"/>
       <regexp match="/\%%xml:Name;\;/" region="xml:EntityRef"/>
      </scheme>

      <scheme name="RE-String">
       <annotation><documentation>
        Regexp string. Using package regexp.hrc. 
       </documentation></annotation>
       <inherit scheme="regexp:hrc.regexp">
        <virtual scheme="regexp:code" subst-scheme="QName-content"/>
        <virtual scheme="regexp:string" subst-scheme="HRC-String"/>
        <virtual scheme="regexp:hrc.regexp" subst-scheme="RE-String"/>        
       </inherit>
      </scheme>
      
      <scheme name="RE-Class">
       <inherit scheme="regexp:hrc.class">
        <virtual scheme="regexp:code" subst-scheme="QName-content"/>
        <virtual scheme="regexp:string" subst-scheme="HRC-String"/>
       </inherit>
      </scheme>

      <scheme name="REworddiv-content">
       <regexp match="/\%%xml:Name;\;/" region="xml:EntityRef"/>
       <block start="/(\[)/" end="/(\])/" scheme="RE-Class" 
        region00="BracketStart" region01="def:PairStart"
        region10="BracketEnd" region11="def:PairEnd"  
       />
<!--       <block start="/(\[)/" end="/(\])/" 
       <inherit scheme="RE-String"/>-->
      </scheme>
      
      <scheme name="REentity-content">
       <inherit scheme="RE-String"/>
       <inherit scheme="RE-Class"/>
      </scheme>
      <scheme name="REentity-content-error">
        <inherit scheme="REentity-content"/>
      </scheme>      
      
      
      <scheme name="REstring-content">
        <!-- These calls doesn't take into account their call
        context (element or attribute content).
        These situations must have a different logic
        -->
        <block start="/(\/)/" end="/(\/([igsx]*))/" scheme="RE-String"
               region00="BracketStart" region01="PairStart"
               region10="BracketEnd" region11="PairEnd" 
               region12="regexp:SpecArea"/>
      </scheme>
    </type>
  </custom-type>

</custom>
; screen.za
; Работа с видеобуфером
; 02.09.2000

COMMENT -----------------------------------------------Требует-

Требует:

* FONT_4x8 - адрес шрифта 4x8 (специальный формат, с
             выравниванием на #100
* FONT_8x8 - адрес шрифта 8x8 (специальный формат, с
             выравниванием на #100
* cfg_COL_MAIN - атрибуты экрана

---------------------------------------------------------------

COMMENT ----------------------------------------------Содержит-

* scr_Pos2Scr: Макрос преобразует координаты в адрес экрана.
      d  - координата Y (0-23);
      e  - координата X (0-31).
  Возвращает: de - адрес экрана, соответствующий X и Y,
              a  - изменен.

* scr_Pos2Attr: Макрос преобразует координаты в адрес области
                атрибутов.
      d  - координата Y (0-23);
      e  - координата X (0-31).
  Возвращает: de - адрес экрана, соответствующий X и Y,
              a  - изменен.

* scr_Scr2Attr: Макрос преобразует адрес экрана в адрес области
                атрибутов.
      de - адрес экрана;
  Возвращает: de - полученный адрес атрибутов, a - изменен.

* scr_AddrDn: Макрос получает адрес экрана на одну пиксельную
              линейку ниже заданного.
      de - адрес экрана;
  Возвращает: de - полученный адрес экрана, a  - изменен.

* scr_AddrUp: Макрос получает адрес экрана на одну пиксельную
              линейку выше заданного.
      de - адрес экрана;
  Возвращает: de - полученный адрес экрана, a  - изменен.

* scr_AddrDn8: Макрос получает адрес экрана на одно знакоместо
               ниже заданного.
      de - адрес экрана;
  Возвращает: de - полученный адрес экрана, a  - изменен.

* scr_AddrUp8: Макрос получает адрес экрана на одну пиксельную
               линейку выше заданного.
      de - адрес экрана;
  Возвращает: de - полученный адрес экрана, a  - изменен.

* scr_Clear: Очистка экрана в соответствии с атрибутами.

* scr_Print8x8: Печать ASCIIZ-строки на экране в режиме 8x8.
      ix - адрес строки;
      bc - координаты экрана (см. scr_Pos2Scr).
  Возвращает: a - 0, ix - последний элемент строки (0)
              hl,de,b - изменены.

* scr_SymOut8x8: Печать символа на экране в режиме 8x8
      de - адрес экрана;
      a  - код символа.
  Возвращает: hl,bc,a - измемены.

* scr_Print4x8: Печать ASCIIZ-строки на экране в режиме 4x8.
      ix - адрес строки;
      bc - координаты экрана (см. scr_Pos2Scr).
  Возвращает: a - 0, ix - последний элемент строки (0)
              hl,de,bc - изменены.

* scr_SymOut4x8: Печать символа на экране в режиме 4x8
      de - адрес экрана;
      c  - маска символа (%11110000 или %00001111);
      a  - код символа.
  Возвращает: hl,bc,a - измемены.

---------------------------------------------------------------

scr_Pos2Scr       MAC
                  ld    a,d
                  and   %00000111
                  rrca
                  rrca
                  rrca
                  add   a,e
                  ld    e,a
                  ld    a,d
                  and   %00011000
                  or    #40 ;#C0
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_Pos2Attr      MAC
                  ld    a,d
                  rrca
                  rrca
                  rrca
                  ld    d,a
                  and   %11100000
                  or    e
                  ld    e,a
                  ld    a,d
                  and   %00000011
                  or    #58 ;#D8
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_Scr2Attr      MAC
                  ld    a,d
                  and   %00011000
                  rrca
                  rrca
                  rrca
                  or    #58 ;#D8
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_AddrDn        MAC
                  inc   d
                  ld    a,d
                  and   %00000111
                  jr    nz,$+12
                  ld    a,e
                  add   a,#20
                  ld    e,a
                  jr    c,$+6
                  ld    a,d
                  sub   #08
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_AddrUp        MAC
                  ld    a,d
                  dec   d
                  and   %00000111
                  jr    nz,$+12
                  ld    a,e
                  sub   #20
                  ld    e,a
                  jr    c,$+6
                  ld    a,d
                  add   a,#08
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_AddrDn8       MAC
                  ld    a,e
                  add   a,#20
                  ld    e,a
                  jr    nc,$+6
                  ld    a,d
                  add   a,#08
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_AddrUp8       MAC
                  ld    a,e
                  sub   #20
                  ld    e,a
                  jr    nc,$+6
                  ld    a,d
                  sub   #08
                  ld    d,a
                  ENDM
;-------------------------------------------------------------;

scr_Clear         PROC
                  ld    hl,#5AFF ;#DAFF
                  ld    de,#5AFE ;#DAFE
                  ld    bc,#02FF
                  ld    a,(cfg_COL_MAIN)
                  ld    (hl),a
                  lddr
                  dec   hl
                  dec   e
                  ld    (hl),c
                  ld    bc,#17FF
                  lddr
                  ret
scr_Clear         ENDP
;-------------------------------------------------------------;

scr_Print4x8      PROC
                  ld    d,b
                  ld    e,c
                  scr_Pos2Scr
                  bit   0,c ;Чет/нечет? Нужно для маски
                  ld    c,%00001111 ;Для четных столбцов
                  jr    z,@1
                  ld    c,%11110000 ;Для нечетных столбцов
@1:               ld    a,(ix) ;a = очередной символ строки
                  or    a
                  ret   z ;Возврат, если a=0
                  call  scr_SymOut4x8 ;Вывод символа
                  inc   ix
                  inc   c      ;\
                  jp    p,@1-2 ;- Проверим старший бит c
                  ld    c,%00001111
                  inc   e ;Следующий адрес экрана
                  jr    @1
scr_Print4x8      ENDP
;-------------------------------------------------------------;

scr_Print8x8      PROC
                  ld    d,b
                  ld    e,c
                  scr_Pos2Scr
                  ld    a,(ix)
                  or    a
                  ret   z
                  call  scr_SymOut8x8
                  inc   e
                  inc   ix
                  jr    scr_Print8x8+3
scr_Print8x8      ENDP
;-------------------------------------------------------------;

scr_SymOut8x8     PROC
                  ld    h,HIGH FONT_8x8 ;Д.б. выравнен на 256!
                  ld    l,a
                  ld    c,d
                  ld    b,8
@1:               ld    a,(hl) ;Не разлинеиваем - и так быстро
                  ld    (de),a
                  inc   h
                  inc   d
                  djnz  @1
                  ld    d,c
                  ret
scr_SymOut8x8     ENDP
;-------------------------------------------------------------;

scr_SymOut4x8     PROC
                  ld    h,HIGH FONT_4x8 ;Д.б. выравнен на 256!
                  ld    l,a ;hl = FONT_4x8
                  ld    b,d ;Сохраним de
                  ld    a,(de) ;a = содержимое видеобуфера
                  xor   (hl) ;\
                  and   c    ; Наложение на экран по маске
                  xor   (hl) ;/
                  ld    (de),a ;Отразим изменение на экране
                  inc   h
                  inc   d
                  ld    a,(de) ;Разлинеено для скорости
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  inc   h
                  inc   d
                  ld    a,(de)
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  inc   h
                  inc   d
                  ld    a,(de)
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  inc   h
                  inc   d
                  ld    a,(de)
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  inc   h
                  inc   d
                  ld    a,(de)
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  inc   h
                  inc   d
                  ld    a,(de)
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  inc   h
                  inc   d
                  ld    a,(de)
                  xor   (hl)
                  and   c
                  xor   (hl)
                  ld    (de),a
                  ld    d,b ;Восстановим de
                  ret
scr_SymOut4x8     ENDP
;-------------------------------------------------------------;

Перем НДС19_1, НДС19_2, НДС19_3, НДС19_4, НДС19_5, НДС19_6, НДС19_7;
Перем Док;
Перем ФлагЗакрСчФ;

// оРегВЗ = рассчитанный объект "Регистр.Взаиморасчеты"
// К - коэффициент закрытия СчФ
// Возвращает сумму, на которую была закрыта СчФ
Функция ЗакрытьСчетФактуруБезВозвращенных( оРегВЗ, СчФ, К, ТаблицаВозврата ) Экспорт
    Состояние( "Закрываем счет фактуру <"+СчФ+"> с коэффициентом "+К );
    КомСчФОтгрузки = "По СчФ <"+СчФ+"> (оплата)";

    ОбщаяСуммаОплаты = 0;
    СчФ.ВыбратьСтроки();
	Пока СчФ.ПолучитьСтроку() = 1 Цикл
		НомСтр = 0;
        Если ТаблицаВозврата.НайтиЗначение( СчФ.Наименование, НомСтр, "Наименование" ) > 0 Тогда
        	ТаблицаВозврата.ПолучитьСтрокуПоНомеру( НомСтр );
            Если ТаблицаВозврата.БылИзлишекОплаты = 1 Тогда
            	Продолжить;
            КонецЕсли;
        	вСумма = ТаблицаВозврата.Сумма;
        	вНДС = ТаблицаВозврата.НДС;
        	вКолич = ТаблицаВозврата.Количество;
            вЕдиница = ТаблицаВозврата.Единица;
			КоэфЕд = КоэфЕдИзмерения( Единица, СчФ.Наименование.БазоваяЕдиница );
			вКолич = вКолич * КоэфЕд;
		Иначе
        	вСумма = 0; вНДС = 0; вКолич = 0; 
        КонецЕсли;

        оРегВЗ.СводныеОстатки( СчФ.Клиент, СчФ, СчФ.Наименование, );
        ДолгСумма = оРегВЗ.Сумма - вСумма;
        Если вСумма <> 0 Тогда
        	Сообщить("Долг по возвращаемому наименованию <"+СчФ.Наименование+"> составляет "+ДолгСумма+"("+оРегВЗ.Сумма+" - "+вСумма+")", "i");
		КонецЕсли;
		Если ДолгСумма < 0 Тогда
			Сообщить("Долг по возвращаемому наименованию <"+СчФ.Наименование+"> отритцателен: "+ДолгСумма+"("+оРегВЗ.Сумма+" - "+вСумма+")", "!!!");
			Возврат -1;
		КонецЕсли;
        ДолгНДС = оРегВЗ.Сумма - вНДС;
        ДолгКолич = оРегВЗ.Количество - вКолич;

		Если ДолгСумма = 0 Тогда
			Продолжить;
		КонецЕсли;

		КоэфЕд = КоэфЕдИзмерения( СчФ.Единица, СчФ.Наименование.БазоваяЕдиница );
		ДокКолич = ДолгКолич * К * КоэфЕд;
		ДокСумма = Окр( ДолгСумма * К, 5 );
		ДокНДС = ДолгНДС * К;

		Если ЭтоНашаПродукция(СчФ.Наименование) = 1 Тогда
			ОплатаПоРегиструГотПрод( НомСтр, СчФ.Наименование, ДокКолич, ДокСумма-ДокНдс, Регистр.ГотоваяПродукция );
		КонецЕсли;

		Регистр.Взаиморасчеты.ПривязыватьСтроку( 0 );
		РасходРегВзСОбнул( Регистр.Взаиморасчеты, оРегВЗ, СчФ, СчФ.Наименование,
						   ДокСумма, ДокНДС, ДокКолич, 0,
						   вСумма, вНДС, вКолич );
        ОбщаяСуммаОплаты = ОбщаяСуммаОплаты + ДокСумма;

    	// проводка по оплате
		СуммаПоОтгрЦене = СчФ.Наименование.Прих_Цена.Получить( ДокОсн.ДатаДок ) * ДокКолич;
		Сч46 = СчетРеализацииПоНаименованию( СчФ.Наименование, СчФ );
		Проводка( Операция, Сч46.Код, "45.2", СуммаПоОтгрЦене, , Клиент, "ПН", КомСчФОтгрузки, );
		Сч76 = ?( СчФ.НДС <> 0, "76.12", "76.11" );
		Проводка( Операция, Сч76, Сч46.Код, ДокСумма, Клиент, Клиент, "ПН", КомСчФОтгрузки, );
		Если СчФ.НДС <> 0 Тогда
			Проводка( Операция, "76.12", "68.2", ДокНДС, Клиент, Перечисление.ПлатежиВФонды.Взносы, "ПН", "НДС "+КомСчФОтгрузки, );
		КонецЕсли;

    КонецЦикла;
	Возврат ОбщаяСуммаОплаты;
КонецФункции

Процедура НДСкВозмещению()
	Перем хДок;
	//Попробуем найти оплату через банк;
	Платежка=0;
	СчСчф=0;                    //Счет или счет-фактура;
	хДок=СоздатьОбъект("Документ.Платежка");
	хДок.ОбратныйПорядок(1);
	хДок.ВыбратьДокументы("01.01.98",ДатаДок);
	//Выбираем документы начиная с текущей даты назад
	Пока хДок.ПолучитьДокумент()=1 Цикл
		Если хДок.ТекущийДокумент().Проведен()=0 Тогда  //?
			Продолжить;
			//** Возврат;
		КонецЕсли;
		Если (хДок.Действие.Наименование="Расчет с поставщиком") И
		(хДок.Клиент=Клиент) Тогда
			хДок.ВыбратьСтроки();
			Пока хДок.ПолучитьСтроку()=1 Цикл
				Если хДок.Счф.Сумма=Итог("Сумма") Тогда
					СчСчф=хДок.СчФ;
				КонецЕсли;
			КонецЦикла;
			Если СчСчФ=0 Тогда
				Если хДок.ПоСчФ.Выбран()=1 Тогда
					Если хДок.ПоСчФ.Сумма=Итог("Сумма") Тогда
						СчСчф=хДок.ПоСчФ;
					КонецЕсли;
				ИначеЕсли хДок.ПоСчету.Выбран()=1 Тогда
					Если хДок.ПоСчету.Сумма=Итог("Сумма") Тогда
						СчСчф=хДок.ПоСчету;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если СчСчф<>0 Тогда
				Платежка=хДок.ТекущийДокумент();
				Оп=Платежка.Операция;
				Оп.ВыбратьПроводки();  //Обращение к проводкам платежки
				Пока Оп.ПолучитьПроводку()=1 Цикл
					Если Оп.Дебет.Счет=СчетПоКоду("68.2") Тогда
						Возврат;    // Если в платежке уже есть проводки по возмещению,
					КонецЕсли;          // Дт68-Кт19, тогда делаем выход из процедуры
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Платежка=0 Тогда
		//              Сообщить("Не найдена платежка, сделанная по счету или по счет-фактуре на ту же сумму, что и накладная "
		//              +РазделительСтрок+"Проводки по возмещению НДС не сделаны.");
		Возврат;
	КонецЕсли;

	НДС19_1 = 0; НДС19_2 = 0; НДС19_3 = 0; НДС19_4 = 0;
	НДС19_5 = 0; НДС19_6 = 0; НДС19_7 = 0;
	//Найдем суммы НДС, выделенные на 19 счет по накладной

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если (Наименование.Вид()="ОС")  Тогда
			Если Константа.ЛьготаПоНДС=Перечисление.Булево.Да   Тогда
				НДС19_1 = 0;     //
			Иначе
				НДС19_1 = НДС19_1 + НДС;
			КонецЕсли;
		ИначеЕсли (Наименование.Вид()="Комплектация") Тогда
			НДС19_1 = 0;         //Здесь возмещение не должно быть
		ИначеЕсли Наименование.Вид()="НМА" Тогда
			НДС19_2 = НДС19_2 + НДС;
		ИначеЕсли (Наименование.Вид()="Материалы") ИЛИ (Наименование.Вид()="Полуфабрикат") Тогда
			НДС19_3 = НДС19_3 + НДС;
		ИначеЕсли Наименование.Вид()="МБП" Тогда
			НДС19_4 = НДС19_4 + НДС;
		ИначеЕсли Наименование.Вид()="УслугиПолуч" Тогда
			НДС19_5 = НДС19_5 + НДС;
		ИначеЕсли Наименование.Вид()="Товары" Тогда
			НДС19_6 = НДС19_6 + НДС;
		ИначеЕсли Наименование.Вид()="РасходыБудущПериода" Тогда
			НДС19_7 = НДС19_7 + НДС;
		КонецЕсли;
	КонецЦикла;
	//Найдем суммы НДС, подлежащие возмещению ( оплаченный НДС )
	Если Платежка.Сумма/Итог("Сумма") <= 1 Тогда
		К = Платежка.Сумма/Итог("Сумма");    //Коэффициент "оплаты", если накл. вся оплачена К=1.
	Иначе
		К = 1;
	КонецЕсли;

	//Проводки по возмещению НДС
	Если НДС19_1>0 Тогда
		Проводка(Операция,"68.2","19.1",НДС19_1*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
	Если НДС19_2>0 Тогда
		Проводка(Операция,"68.2","19.2",НДС19_2*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
	Если НДС19_3>0 Тогда
		Проводка(Операция,"68.2","19.3",НДС19_3*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
	Если НДС19_4>0 Тогда
		Проводка(Операция,"68.2","19.4",НДС19_4*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
	Если НДС19_5>0 Тогда
		Проводка(Операция,"68.2","19.5",НДС19_5*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
	Если НДС19_6>0 Тогда
		Проводка(Операция,"68.2","19.6",НДС19_6*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
	Если НДС19_7>0 Тогда
		Проводка(Операция,"68.2","19.7",НДС19_7*К,Перечисление.ПлатежиВФонды.Взносы,,"ПН","Возмещ.НДС");
	КонецЕсли;
КонецПроцедуры // НДСкВозмещению()

// ************************* THE MAIN PART **********************************

Процедура ОбработкаПроведения( Зн )

	Перем СчетКт, СубСч10, БИ, Спр, Инд;
	Перем УсреднятьЦену, СпсЦен, хЭлемент, СрЦена, СуммаПроводки;

	Если ПроведеноРуками=0 тогда
		ТаблицаДляВыбора = ПредоплатаПоставщику(Контекст);
	КонецЕсли;

	Состояние("Очистка движений...");
	ОчиститьДвижения();

	Если (Действие.Наименование="Закупка")
		 ИЛИ (Действие.Наименование="В уставной фонд")
		 ИЛИ (Действие.Наименование="Импорт")
	Тогда
		ПапкаФизЛица=СоздатьОбъект("Справочник.Клиенты");
		Если ПапкаФизЛица.НайтиПоНаименованию("Физические лица")=0 тогда
			Сообщить("Не найдена группа <Физические лица> !!!");
			СтатусВозврата(0);Возврат;
		КонецЕсли;

		Спр = СоздатьОбъект("Справочник.Клиенты");
		Спр.НайтиПоКоду(Клиент.ПолныйКод());
		БИ = СоздатьОбъект("БухгалтерскиеИтоги");
		БИ.ИспользоватьПланСчетов(ВыбранныйПланСчетов());
		БИ.ИспользоватьСубконто(ВидыСубконто.Контрагенты,Спр.ТекущийЭлемент());
		Состояние("Рассчет итогов");
        БИ.Рассчитать( НачМесяца(ДатаДок), ДатаДок, "61" );
		БИ.ВыполнитьЗапрос( НачМесяца(ДатаДок), ДатаДок, "61" );
		СК61 = БИ.СКД();
		Если СК61<>0 Тогда   // закрываем выданные авансы
			Если СК61<Итог("Сумма") Тогда
				Проводка(Операция,"60.1","61",СК61,Клиент,Клиент,"ПН","Погашение аванса");
			Иначе
				Проводка(Операция,"60.1","61",Итог("Сумма"),Клиент,Клиент,"ПН","Погашение аванса");
			КонецЕсли;
		КонецЕсли;
		Если (Действие.Наименование="Закупка") Тогда
			СчетКт = "60.1";
			//** 24.08.00 Суммовая разница
			Если Валюта.Наименование<>"Рубль" тогда
				ПУ=СоздатьОбъект("Справочник.ПрибылиУбытки");
				Если ПУ.НайтиПоНаименованию("СуммоваяРазница")=0 тогда
					Сообщить("Субконто ""СуммоваяРазница"" не обнаружено!!!");
					СтатусВозврата(0);Возврат;
				КонецЕсли;
				Тбл=ТаблицаДляВыбора;
				Тбл.ВыбратьСтроки();
				Пока Тбл.ПолучитьСтроку()=1 цикл
					Если Тбл.Метка=1 тогда
						Если Валюта.Наименование=Тбл.Документ.Валюта.Наименование тогда
							КК=Валюта.Текущ_курс.Получить(ДатаНакладной)/Валюта.Текущ_курс.Получить(Тбл.Документ.ДатаДок);
							КРазница=(КК-1)*Тбл.Сумма;
							Если кк<0 тогда
								//Проводка(Операция,Дт=0,Кт=0,Сумма,СубкДт1=0,СубкКт1=0,Журнал="",Коментарий="",Количество=0,СубкДт2=0,СубкКт2=0,Пл=0) Экспорт
								Проводка(Операция,"60.1","80",КРазница,Клиент,ПУ.ТекущийЭлемент());
							ИначеЕсли кк>0 тогда
								Проводка(Операция,"80","60.1",КРазница,ПУ.ТекущийЭлемент(),Клиент);
							КонецЕсли;
						Иначе
							Сообщить("Несовпадение валют!!!");
							СтатусВозврата(0);Возврат;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			//**>>

		ИначеЕсли (Действие.Наименование="В уставной фонд") Тогда
			СчетКт = "75.1";
		ИначеЕсли (Действие.Наименование="Импорт") Тогда
			СчетКт = "60.2";
		КонецЕсли;
		СубкКт=Клиент;
		УсреднятьЦену=0;
		//** Двинем регистрами по Поставщикам
		//Сообщить("Ну не я это,");
		Сум=Итог("Сумма");
		Сумм=Сум;
		//** 61-(51)
		Пред=РасходПредоплатыПоставщику(Контекст,Сум,Регистр.ПредоплатаПоставщикам);
		//** Теперь сум = тому что осталось от долга ПОСЛЕ предоплаты
		Если пред<>-1 тогда
			//** (10)-60
			ДвинутьДолгПоставщику(Контекст,ТекущийДокумент(),Сумм,Регистр.РассчетыСПоставщиками);
			//** 60-61
			ДвинутьДолгПоставщику(Контекст,ТекущийДокумент(),Сумм-Сум,Регистр.РассчетыСПоставщиками,Пред,0);//Расход
		Иначе
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;

		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если Наименование.Вид()="УслугиПолуч" Тогда
				//** 10.09.00   Авторские
				СчетКт1=СчетКт;
				//				Если Клиент.ПринадлежитГруппе(ПапкаФизЛица)=1 тогда
				//				  СчетКт="73.5";
				//				КонецЕсли;
				//**>>
				Если ПроводкиПоСписанию(Операция,Контекст,СчетКт,(Сумма-НДС),СубкКт) <> 1 Тогда
					СтатусВозврата( 0 ); Возврат;
				КонецЕсли;
				Если НДС>0 Тогда
					Проводка(Операция,"19.5",СчетКт,НДС,,СубкКт,"ПН","Начисление НДС");
				КонецЕсли;
				СчетКт=СчетКт1;
			ИначеЕсли Наименование.Вид()="Материалы" Тогда
				УсреднятьЦену=1;
				СубСч10 = глСубСчет10( Наименование );
				Проводка(Операция,СубСч10,СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,,);
				Если НДС>0 Тогда
					Проводка(Операция,"19.3",СчетКт,НДС,,Клиент,"ПН","",,);
				КонецЕсли;
				//Условие оприходования МБП
			ИначеЕсли Наименование.Вид()="МБП" Тогда
				УсреднятьЦену=1;
				Если Склад.Вид=Перечисление.ВидСклада.Основной Тогда
					Проводка(Операция,"12.1",СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,,);
				Иначе
					Проводка(Операция,"12.2",СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,,);
					Если ((Сумма-НДС)/Количество<=Число(Константа.МинимальнаяЗарплата.Получить(ДатаДок))*100/20) Тогда
						ОК = ПроводкиПоСписанию(Операция,Контекст,"13",(Сумма-НДС),Склад,Наименование);
					Иначе
						ОК = ПроводкиПоСписанию(Операция,Контекст,"13",(Сумма-НДС)/2,Склад,Наименование);
					КонецЕсли;
					Если ОК <> 1 Тогда
						СтатусВозврата( 0 ); Возврат;
					КонецЕсли
				КонецЕсли;
				Если НДС>0 Тогда
					Проводка(Операция,"19.4",СчетКт,НДС,,Клиент,"ПН","",,,,);
				КонецЕсли;      //Конец условия оприходования МБП
				//Условие оприходования НМА
			ИначеЕсли (Наименование.Вид()="Товары") Тогда
				УсреднятьЦену=1;
				Если Склад.Вид=Перечисление.ВидСклада.Основной Тогда
					Проводка(Операция,"41.1",СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,,);
					Если НДС>0 Тогда
						Проводка(Операция,"19.6",СчетКт,НДС,,Клиент,"ПН","",);
					КонецЕсли;
				ИначеЕсли Склад.Вид=Перечисление.ВидСклада.Розничный Тогда
					Проводка(Операция,"41.2",СчетКт,Сумма,Склад,Клиент,"ПН","",Количество,Наименование,,);
				Иначе
					Сообщить("Выберите для оприходования товара "+Наименование.Наименование
					+" оптовый или розничный склад. Строка "+НомерСтроки);

					СтатусВозврата( 0 ); Возврат;
				КонецЕсли;
			ИначеЕсли Наименование.Вид()="НМА" Тогда
				//Условие оприходования НМА     на забалансовый счет
				Если (Наименование.Родитель.ПолныйКод()="28") Тогда
					Проводка(Операция,"006","010",Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,,);
					Если ПроводкиПоСписанию(Операция,Контекст,"60.1",Сумма-НДС,Клиент,) <> 1 Тогда
						СтатусВозврата( 0 ); Возврат;
					КонецЕсли;
				Иначе
					Проводка(Операция,"04",СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,,);
				КонецЕсли;

				Если НДС>0 Тогда
					Проводка(Операция,"19.2",СчетКт,НДС,,Клиент,"ПН","",,,);
				КонецЕсли;      //Конец условия оприходования НМА
			ИначеЕсли Наименование.Вид()="РасходыБудущПериода" Тогда
				Проводка(Операция,"31",СчетКт,Сумма-НДС,Наименование,Клиент,"ПН","",,,);
				Если НДС>0 Тогда
					Проводка(Операция,"19.7",СчетКт,НДС,,Клиент,"ПН","",,,);
				КонецЕсли;
			ИначеЕсли Наименование.Вид()="Комплектация" Тогда
				Проводка(Операция,"07.1",СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,);
				Если НДС>0 Тогда
					Проводка(Операция,"19.1",СчетКт,НДС,,Клиент,"ПН","",,,);
				КонецЕсли;
			ИначеЕсли Наименование.Вид()="ОС" Тогда
				Если Наименование.Статус=Перечисление.СтатусОС.Собственное Тогда
					Если Константа.ЛьготаПоНДС=Перечисление.Булево.Да Тогда
						Проводка(Операция,"01.1",СчетКт,Сумма,Склад,Клиент,"ПН","",Количество,Наименование,);
						Если Наименование.НачИзнос>0 Тогда
							Проводка(Операция,СчетКт,"02.1",Наименование.НачИзнос,Клиент,Наименование,"ПН","",,,);
						КонецЕсли;
					ИначеЕсли Константа.ЛьготаПоНДС=Перечисление.Булево.Нет Тогда
						Проводка(Операция,"01.1",СчетКт,Сумма-НДС,Склад,Клиент,"ПН","",Количество,Наименование,);
						Если Наименование.НачИзнос>0 Тогда
							Проводка(Операция,СчетКт,"02.1",Наименование.НачИзнос,Клиент,Наименование,"ПН","",,,);
						КонецЕсли;
						Если НДС>0 Тогда
							Проводка(Операция,"19.1",СчетКт,НДС,,Клиент,"ПН","",,,);
						КонецЕсли;
					Иначе
						Сообщить("Заполните константу ЛьготаПоНДС. Док № "+НомерДок+" от "+ДатаДок);
						СтатусВозврата( 0 ); Возврат;
					КонецЕсли;
				Иначе
					Сообщить("Вы не можете закупить ОС со статусом "+Наименование.Статус+". Выберите другое действие. Строка "+НомерСтроки);
					СтатусВозврата( 0 ); Возврат;
				КонецЕсли;
			Иначе
				Сообщить("Для "+Наименование.Вид()+" не разработаны проводки! Док № "+НомерДок+" от "+ДатаДок);
				СтатусВозврата( 0 ); Возврат;
			КонецЕсли;
		КонецЦикла;
		Если УсреднятьЦену = 1 Тогда
			СпсЦен=ЗаписатьЦену(Операция,ТекущийДокумент());
			Для Сч=1 по СпсЦен.РазмерСписка() Цикл
				хЭлемент=СпсЦен.ПолучитьЗначение(Сч,СрЦена);
				СрЦена=Число(СрЦена);
				УстановитьРеквизитСправочника(хЭлемент, "Прих_Цена", СрЦена, ДатаДок);
			КонецЦикла;
		КонецЕсли;
		НДСкВозмещению();
	ИначеЕсли Действие.Наименование="Ответственное хранение" Тогда
	  ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
      Если Наименование.Вид()="МБП" Тогда
				Проводка(Операция,"002","010",Сумма,Склад,Клиент,"ПН","Ответ.хранение",Количество,Наименование,);
			ИначеЕсли Наименование.Вид()="Материалы" Тогда
				Проводка(Операция,"003","010",Сумма,Склад,Клиент,"ПН","Ответ.хранение",Количество,Наименование,); //нужен ли Клиент в СубкДт2 ?
			ИначеЕсли Наименование.Вид()="Товары" Тогда
				Проводка(Операция,"004","010",Сумма,Склад,Клиент,"ПН","Ответ.хранение",Количество,Наименование,); //нужен ли Клиент в СубкДт2 ?
			ИначеЕсли Наименование.Вид()="ОС" Тогда
				Проводка(Операция,"005","010",Сумма,Склад,Клиент,"ПН","Ответ.хранение",Количество,Наименование,); //нужен ли Клиент в СубкДт2 ?
			ИначеЕсли Наименование.Вид()="НМА" Тогда
				Проводка(Операция,"006","010",Сумма,Склад,Клиент,"ПН","Ответ.хранение",Количество,Наименование,); //нужен ли Клиент в СубкДт2 ?
			Иначе
				Сообщить("Для действия ""Ответственное хранение"" "+Наименование.Вид()+" не разработаны проводки! Строка "+НомерСтроки);
				СтатусВозврата( 0 ); Возврат;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли (Действие.Наименование="На реализацию без права собственности") Тогда
	  ВыбратьСтроки();
	    Пока ПолучитьСтроку()=1 Цикл
	      Если Наименование.Вид()="Товары" Тогда
	        Если Наименование.СтатусТовара<>Перечисление.СтатусТовара.НаРеализации Тогда
	          Сообщить("Статус товара должен быть ""На реализации"""+РазделительСтрок
	          				+"строка "+строка(НомерСтроки));
	          СтатусВозврата(0);Возврат;
          КонецЕсли;
					Проводка(Операция,"004","010",Сумма,Склад,Клиент,"ПН","На реализации",Количество,Наименование,); //нужен ли Клиент в СубкДт2 ?
				КонецЕсли;
			КонецЦикла;
	ИначеЕсли (Действие.Наименование="На комиссию") Тогда
	  ВыбратьСтроки();
	    Пока ПолучитьСтроку()=1 Цикл
	      Если Наименование.Вид()="Товары" Тогда
	        Если Наименование.СтатусТовара<>Перечисление.СтатусТовара.НаРеализации Тогда
	          Сообщить("Статус товара должен быть ""На реализации"""+РазделительСтрок
	          				+"строка "+строка(НомерСтроки));
	          СтатусВозврата(0);Возврат;
          КонецЕсли;
					Проводка(Операция,"004","010",Сумма,Склад,Клиент,"ПН","Поступил на комиссию",Количество,Наименование,); //нужен ли Клиент в СубкДт2 ?
				КонецЕсли;
			КонецЦикла;
 	ИначеЕсли Действие.Наименование="В аренду" Тогда
		ВыбратьСтроки();
		Пока ПолучитьСтроку()=1 Цикл
			Если Наименование.Вид()="ОС" Тогда
				Если Наименование.Статус=Перечисление.СтатусОС.Собственное Тогда
					Сообщить("Вы не можете взять в аренду собственное ОС. Выберите действие ""Закупка"". Строка "+НомерСтроки);
					СтатусВозврата( 0 ); Возврат;
				ИначеЕсли ( Наименование.Статус=Перечисление.СтатусОС.АрендаПлатнаяБезИзноса) или
				( Наименование.Статус=Перечисление.СтатусОС.АрендаПлатнаяИзносом) Тогда
					Проводка(Операция,"001.1","010",Сумма,Склад,Клиент,"ПН","В аренду",Количество,Наименование);
				ИначеЕсли Наименование.Статус=Перечисление.СтатусОС.АрендаБезвозмездная Тогда
					Проводка(Операция,"001.2","010",Сумма,Склад,Клиент,"ПН","В аренду",Количество,Наименование);
				Иначе
					Сообщить("Для ОС со статусом "+Наименование.Статус+" не разработаны проводки. Строка "+НомерСтроки);
					СтатусВозврата( 0 ); Возврат;
				КонецЕсли;
			Иначе
				Сообщить("Для "+Наименование.Вид()+" не разработаны проводки! Строка "+НомерСтроки);
				СтатусВозврата( 0 ); Возврат;
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли Действие.Наименование = "Возврат от покупателя" Тогда

        // *******************************************************************
		// ********* Возвожно самая сложная часть самого сложного ************
		// ************ первичного документа нашей конфигурации **************
        // *******************************************************************

		Если ДокОсн.Выбран() = 0 Тогда
			Сообщить("Действие ""Возврат от покупателя"": Необходимо указать документ-основание", "!");
			СтатусВозврата( 0 ); Возврат;
		КонецЕсли;

		СчФакт = СчетФактура( ТекущийДокумент() );
		Если СчФакт = 0 Тогда
			Сообщить( "Не найден связанный документ ""Регистрация счета-фактуры""", "!" );
			СтатусВозврата( 0 ); Возврат;
		КонецЕсли;

		ДокРН = ДокОсн;
		СчФОтгрузки = СчетФактура( ДокРН );

		Если (СчФОтгрузки.Действие.Наименование <> "Продукция отгружена")
			 И ( СчФОтгрузки.Действие.Наименование <> "На комиссию")
		Тогда
			Сообщить( "Счет-фактура оплаты не на отгрузку и не на комиссию!", "!!!" );
			СтатусВозврата(0); Возврат;
		КонецЕсли;

		// Построим список наименований ПН по возврату
		ТаблицаВозврата = СоздатьОбъект( "ТаблицаЗначений" );
        ВыгрузитьТабличнуюЧасть( ТаблицаВозврата, "НомерСтроки,Наименование,Количество,Сумма,НДС,Единица" );
        ТаблицаВозврата.НоваяКолонка("БылИзлишекОплаты", "Число");

		Сум76_11 = 0; Сум76_12 = 0;

		Рег = СоздатьОбъект( "Регистр.Взаиморасчеты" );
		Если ПолучитьДатуТА() > ДатаДок Тогда // если итоги не актуальны
        	Состояние("Рассчет регистра...");
			Рег.ВременныйРасчет();
			Рег.УстановитьФильтр( Клиент,, );
			РассчитатьРегистрыНа( ТекущийДокумент() );
		КонецЕсли;

		// Процесс пошел...

		ОбщийИзлишекСуммы = 0;

		ВыбратьСтроки();
		Пока ПолучитьСтроку() = 1 Цикл
			//** 24/07/00
			ОплатаПоРегиструГотПрод(НомерСтроки,Наименование,Количество,СуммаБезНДС,Регистр.ГотоваяПродукция,1);

			ФлагОплачено = 0;
			// Сообщить("Обрабатывается ("+ОбрабСтр+" из "+КоличествоСтрок()+ ") """+Наименование+"""");
			ОбрабСтр = ОбрабСтр+1;
			СуммаПроводки = Наименование.Прих_Цена.Получить(ДокОсн.ДатаДок) * Количество;
			// Начало изврата с регистрами
			СумОтгПоРН = 0; // Сумма отгрузки по РН
			КолОтгПоРН = 0; // Кол-во отгрузки по РН
			ЭлементПН = ЭлементНеопрСправ( Наименование ); // текущее наименование в ПН
			ДокРН.ВыбратьСтроки();
			Пока ДокРН.ПолучитьСтроку() = 1 Цикл
				ЭлементРН = ЭлементНеопрСправ( ДокРН.Наименование );
				Если ( ЭлементПН = ЭлементРН ) Тогда
					КолОтгПоРН = КолОтгПоРН + ДокРН.Количество;
					СумОтгПоРН = ДокРН.СуммаБезНДС;//**ДокРН.Сумма;
				КонецЕсли;
			КонецЦикла;

			Если Количество > КолОтгПоРН Тогда
				Сообщить( """"+Наименование+""" Возвращается больше, чем отгружено", "!!!" );
				СтатусВозврата( 0 ); Возврат;
			ИначеЕсли ( Количество = КолОтгПоРН ) и (СуммаБезНДС <> СумОтгПоРН ) Тогда
				Сообщить( """"+Наименование+""" Не совпадают суммы отгрузки и возврата при равном количестве", "!!!" );
				Сообщить(строка(СуммаC_НДС)+"; по накл. "+строка(СумОтгПоРН));
				СтатусВозврата( 0 ); Возврат;
			КонецЕсли;


			КомСчФОтгрузки = "По СчФ <"+СчФОтгрузки+"> (сторн. отгрузки/оплаты)";

            // "Интеллектуальное" движение регистра Взаиморасчеты.
            // Оно состоит в том, чтобы двинуть регистр "туда" и "обратно"
            // с минусом. То есть для возврата продукции приходовать его с минусом,
            // а для возврата "лишних" денег расходовать с минусом

            // Часть 1. Погашение долга перед клиентом
            // Обратное движение регистра Взаиморасчеты, возвращающее продукцию
			КоэфЕд = КоэфЕдИзмерения( Единица, Наименование.БазоваяЕдиница );
			ПолноеКолич = Количество * КоэфЕд;
			Регистр.Взаиморасчеты.ПривязыватьСтроку( НомерСтроки );
			Регистр.Взаиморасчеты.Клиент = Клиент;
			Регистр.Взаиморасчеты.СчетФактура = СчФОтгрузки;
			Регистр.Взаиморасчеты.Наименование = Наименование;
			Регистр.Взаиморасчеты.Оплата = 0;
			Регистр.Взаиморасчеты.Количество = - ПолноеКолич;
			Регистр.Взаиморасчеты.Сумма = - Сумма;
			Регистр.Взаиморасчеты.НДС = - НДС;
			Регистр.Взаиморасчеты.Закрытие64 = 0;
			Регистр.Взаиморасчеты.ДвижениеПриходВыполнить();

            // Часть 2. Убирание излишков оплаты

            Рег.СводныеОстатки( Клиент, СчФОтгрузки, Наименование, );

            Если Рег.Сумма < 0 Тогда
            	Сообщить( КомСчФОтгрузки+" по наименованию <"+Наименование+"> имеется отритцательный долг: "+Рег.Сумма, "!!!" );
            	СтатусВозврата(0); Возврат;
            КонецЕсли;

            // Превышение суммы возврата над суммой долга по наименованию
			ИзлишекОплСуммы = Сумма - Рег.Сумма;
			ИзлишекОплНДС = НДС - Рег.НДС;
			ИзлишекОплКолич = ПолноеКолич - Рег.Количество;

			Если Окр( ИзлишекОплСуммы, 5 ) < 0 Тогда
				Сообщить( "В строке №"+НомерСтроки+" возвращается больше, чем нам должны на "+ИзлишекОплСуммы+" рублей!", "!" );
			КонецЕсли;

            // Убираем излишки оплаты по данному наименованию
			Регистр.Взаиморасчеты.ПривязыватьСтроку( НомерСтроки );
			РасходРегВзСОбнул( Регистр.Взаиморасчеты, Рег,
								СчФОтгрузки, Наименование,
								-ИзлишекОплСуммы, -ИзлишекОплНДС, -ИзлишекОплКолич, 0,
								-Сумма, -НДС, -ПолноеКолич );

			Если ИзлишекОплСуммы > 0 Тогда
				НомСтр = 0;
        		Если ТаблицаВозврата.НайтиЗначение( Наименование, НомСтр, "Наименование" ) > 0 Тогда
        			ТаблицаВозврата.ПолучитьСтрокуПоНомеру( НомСтр );
                	ТаблицаВозврата.БылИзлишекОплаты = 1;
                Иначе
                	Сообщить("Super Trouble!","!!!");
                	СтатусВозврата(0); Возврат;
                КонецЕсли;
			КонецЕсли;

            ОбщийИзлишекСуммы = ОбщийИзлишекСуммы + ИзлишекОплСуммы;

            // ********** Конец интеллектуального движения регистров ******

            // ********** ИНТЕЛЛЕКТУАЛЬНЫЕ ПРОВОДКИ ***********************

            // Возврат самой продукции 
			СуммаВозврПоОтгрЦене = Наименование.Прих_Цена.Получить( ДокОсн.ДатаДок ) * ПолноеКолич;
			Сч4041 = ?( Наименование.Вид() = "Товары", "41.1", "40" );
			Проводка( Операция, "45.2", Сч4041, -СуммаВозврПоОтгрЦене, Клиент, Склад, "ПН", КомСчФОтгрузки, -ПолноеКолич, ,Наименование, );

			Если ИзлишекОплСуммы <> 0 Тогда
				// Возврат денежек
				Сч46 = СчетРеализацииПоНаименованию( Наименование, СчФОтгрузки );
				Проводка( Операция, Сч46.Код, "45.2", -СуммаВозврПоОтгрЦене, ,Клиент, "ПН", КомСчФОтгрузки, ,,, );
				Проводка( Операция, "76.11", Сч46.Код, -ИзлишекОплСуммы, Клиент, , "ПН", КомСчФОтгрузки, ,,, );
			КонецЕсли;

			Если ИзлишекОплНДС <> 0 Тогда
            	// Сторнирование НДС
				Проводка( Операция, "76.12", "68.2", -ИзлишекОплНДС, Клиент, Перечисление.ПлатежиВФонды.Взносы, "ПН", "Сторн. НДС "+КомСчФОтгрузки, );
			КонецЕсли;

            Если НДС = 0 Тогда
				Сум76_11 = Сум76_11 + Сумма;
			Иначе
				Сум76_12 = Сум76_12 + Сумма;
			КонецЕсли;
            // ********** Конец интеллектуальных проводок *****************
		КонецЦикла; // по текущему документу ПН

        // --------- Разбрасывание лишней суммы -----------------

        ОбщийИзлишекСуммы = Окр( ОбщийИзлишекСуммы, 2 );
		Сообщить( "После возврата у нас высвободилось "+ОбщийИзлишекСуммы+" рублей." );
		Если ОбщийИзлишекСуммы < 0 Тогда
			Сообщить( "То есть были отритцательные долги судя по регистру Взаиморассчеты!", "!!!" );
			СтатусВозврата(0); Возврат;
		КонецЕсли;

		// на общую сумму возврата
		Если Сум76_11 > 0 Тогда
			Проводка(Операция,"62.2","76.11",-Сум76_11,Клиент,Клиент,"ПН", КомСчФОтгрузки, ,,, );
		КонецЕсли;
		Если Сум76_12 > 0 Тогда
			Проводка(Операция,"62.2","76.12",-Сум76_12,Клиент,Клиент,"ПН", КомСчФОтгрузки, ,,, );
		КонецЕсли;

		Если ОбщийИзлишекСуммы = 0 Тогда
			Сообщить("Денег после возврата у нас не появилось.", "i");
			Перейти ~ОбходПроплаты;
		КонецЕсли;

        // Дозакрываем счет-фактуру отгрузки

		Неопл_Сумма = ИтогДокументаДляОплаты( СчФОтгрузки, Рег, "Сумма" );
		ИтогСумма = Итог("Сумма");
        НеоплСумма = Неопл_Сумма - ИтогСумма + ОбщийИзлишекСуммы;
        Если НеоплСумма < 0 Тогда
			Сообщить("По СчФ отгрузки ("+СчФОтгрузки+") отритцательный долг ("+НеоплСумма+")!", "!!!");
			СтатусВозврата(0); Возврат;
		ИначеЕсли НеоплСумма = 0 Тогда
			Сообщить("СчФ отгрузки уже полностью оплачена");
		Иначе
			Сообщить("СчФ отгрузки частично оплачена, осталось доплатить: "+Неопл_Сумма+" - "+ИтогСумма+" = "+НеоплСумма);
			Если ОбщийИзлишекСуммы > НеоплСумма Тогда
				КоэфЗакрытия = 1;
			Иначе
				КоэфЗакрытия = ОбщийИзлишекСуммы / НеоплСумма;
			КонецЕсли;

			Если КоэфЗакрытия > 0 Тогда
        		СуммаЗакр = ЗакрытьСчетФактуруБезВозвращенных( Рег,
        			СчФОтгрузки, КоэфЗакрытия, ТаблицаВозврата );
        		Если СуммаЗакр < 0 Тогда
        			СтатусВозврата(0); Возврат;
        		КонецЕсли;
				СуммаЗакр = Окр( СуммаЗакр, 2 );
				Сообщить("Закрыли <"+СчФОтгрузки+"> на "+СуммаЗакр+" рублей с коэф-м "+КоэфЗакрытия,"i");
			КонецЕсли;
			ОбщийИзлишекСуммы = ОбщийИзлишекСуммы - СуммаЗакр;
        КонецЕсли;

        // Закрываем счет-фактуру закрытия

        Если СчФЗакр.Выбран() = 1 Тогда
			НеоплСумма = ИтогДокументаДляОплаты( СчФЗакр, Рег, "Сумма" );

       		Если НеоплСумма < ОбщийИзлишекСуммы Тогда
       			СуммаОплСчФ = НеоплСумма;
       			Сообщить("Долг по счет-фактуре закрытия ("+НеоплСумма+") меньше, чем оставшиеся средства ( "+ОбщийИзлишекСуммы+" )", "i");
       		Иначе
       			СуммаОплСчФ = ОбщийИзлишекСуммы;
       		КонецЕсли;

			Если СуммаОплСчФ <> 0 Тогда
				Сообщить("Закрываем <"+СчФЗакр+"> на "+СуммаОплСчФ+" рублей","i");
	        	КоэфЗакрытия = СуммаОплСчФ / НеоплСумма;
                // Двигаем регистрами
                СуммаЗакр = ЗакрытьСчетФактуру( Регистр.Взаиморасчеты,
                					Регистр.КорректСебест,
									Регистр.ГотоваяПродукция, Рег,
									СчФЗакр, КоэфЗакрытия, ДатаДок, 0 );
				Док = РасхНакл( СчФЗакр );
				СумНДС = СуммаОплСчФ / СчФЗакр.Итог("Сумма") * СчФЗакр.Итог("НДС");
				Если ПроводкиПо46( Рег, Операция, Док, СуммаОплСчФ, СумНДС, "По СчФ <"+СчФЗакр+">" ) = 0 Тогда
					СтатусВозврата( 0 ); Возврат;
				КонецЕсли;

				ОбщийИзлишекСуммы = ОбщийИзлишекСуммы - СуммаОплСчФ;
        	Иначе
				Сообщить("К сожалению у нас не осталось денег на закрытие <"+СчФЗакр+">.","i");
			КонецЕсли;
        КонецЕсли;

        Если ОбщийИзлишекСуммы > 0 Тогда
        	Сообщить("У нас осталось еще "+ОбщийИзлишекСуммы+" рублей, которые мы запишем "+Клиент+" как предоплату","i");

        	Проводка( Операция, "62.2", "64", ОбщийИзлишекСуммы, Клиент, Клиент, );
        	Проводка( Операция, "64", "68.2", ОбщийИзлишекСуммы * 20/120, Клиент, Перечисление.ПлатежиВФонды.Взносы, );

            Регистр.Предоплата.Клиент = Клиент;
			Регистр.Предоплата.Сумма = ОбщийИзлишекСуммы;
			Регистр.Предоплата.НДС = ОбщийИзлишекСуммы * 20/120;
			Регистр.Предоплата.ДвижениеПриходВыполнить();
		КонецЕсли;

~ОбходПроплаты:

		// ********************************************************************
		// ********* КОНЕЦ ДЕЙСТВИЯ "Возврат от покупателя" *******************
		// ********************************************************************

	ИначеЕсли Действие.Наименование = "Возврат с комиссии" Тогда
		Сообщить( "Действие "+Действие.Наименование+" сейчас не работает!", "!!!" );
		СтатусВозврата(0); Возврат; 
	КонецЕсли;

	_Спр = СоздатьОбъект( "Справочник.ПрибылиУбытки" );
	_Спр.НайтиПоНаименованию( "Налоги", 0 );
	//	Проводка(Операция,"68.19",СчетКт,СумНалРекл, Перечисление.ПлатежиВФонды.Взносы,Клиент,"РН",""+ВтчДопНалог);
	Проводка(Операция,"80","68.19",СумНалРекл, _Спр.ТекущийЭлемент(),Перечисление.ПлатежиВФонды.Взносы,"РН",""+ВтчДопНалог);

	Операция.Записать();
	Рег = 0;
КонецПроцедуры

ФлагЗакрСчФ = СчФЗакр.Выбран(); // если 1, то закрываем счет-фактуру

<?xml version="1.0" encoding="windows-1251"?>

<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "../hrc.dtd">
<hrc version="take5"
     xmlns="http://colorer.sf.net/2003/hrc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc ../hrc.xsd">

   <type name="perl" access="public">

<annotation>
 <documentation>
    Perl Syntax Description
 </documentation>

 <contributors>
  <![CDATA[
   alexander smishlajev <als@turnhere.com>
   JULY <lubimovi@usa.net>
   Timur Safin <timur@lanit.ru>
   Cail Lomecb <cail@nm.ru>:
       now using different schemes for                              
       different paired limiters, fulll s()() support               
       needs complex variables parsing - using refs, hashs and lists
       also to correct constructions as    s@  foo  @  @bar  @ix;   
   Eugene Efremov <4mirror@mail.ru>:
     - add full regexp support
     - add format support
     - changed names for take5-like style
     - any other fixs and addons...
  ]]>
 </contributors>

 <appinfo><todo>
 <![CDATA[
  Возможные проблемы в реализации поддержки регулярных выражений: 
 
  В колорере на текищий момент не существует возможности распознать 
  ключ 'e' в конце регэкспа. По этому использется следущее 
  соглашение:
   * если используется запись вида s{}{},s()() и т.п то вторая скобка 
   трактуется как код перл.
   * если используется запись вида s///,s||| и т.п. то вторая строка 
   трактуется как строка.
   
  Иными словами:
 - выражения типа s{s1}{s2} (где '{' - скобка любого типа) трактуются как:
   *s1* первая скобка - регулярное выражение;
   *s2* вторая скобка - выражение на perl'е; 
 - выражения типа s/s1/s2/ (где '/' - \W любого типа) тарктуются как:
   *s1* первая скобка - регулярное выражение;
   *s2* первая скобка - обычная perl-строка.
 - выражения типа q{str},qw{str},qq{str} трактуются как строки.
 - выражения типа m{str}, qr{str} etc. трактуются как регулярные выражения;  
 ]]> 
 </todo></appinfo>
</annotation>

      <!-- EE:  namespase modifed, import not need.
      import type="def"/ -->

      <region name="String" parent="def:String"/>
      <region name="StringEdge" parent="def:StringEdge"/>
      <region name="Comment" parent="def:Comment"/>
      <region name="Symb" parent="def:Symbol"/>
      <region name="MainSymb" parent="def:SymbolStrong"/>
      <region name="Word" parent="def:Keyword"/>
      <region name="Numb" parent="def:Number"/>
      <region name="Stream" parent="def:Path"/>
      <region name="Rare" parent="def:DeprecatedKeyword"/> 
      <region name="Slash" parent="def:StringContent"/>
      <region name="Var" parent="def:Var"/>
      <region name="Var2" parent="def:VarStrong"/>
      <region name="Pod" parent="def:CommentDoc"/>
      <region name="PodSym" parent="def:Symbol"/>
      <region name="PodText" parent="def:default"/>
      <region name="PodSel" parent="def:String"/>

      <region name="SubOutline" parent="def:Outlined"/>
      <region name="PackageOutline" parent="def:Outlined"/>
      
      <!-- !!EE: new regions -->
      <region name="EvalText" parent="def:Text"/>
      <region name="ReModif" parent="regexp:SpecArea"/>
      <region name="HereDoc" parent="String"/>
      <region name="FormatDoc" parent="HereDoc"/>
      

      <scheme name="BuildinVars">
         <keywords region="Var">
            <word name="$&amp;"/>
            <word name="$&#34;"/>
            <word name="$'"/>
            <word name="$`"/>
            <word name="$]"/>
            <word name="$["/>
            <word name="$+"/>
            <word name="$*"/>
            <word name="$,"/>
            <word name="$/"/>
            <word name="$|"/>
            <word name="$."/>
            <word name="$\"/>
            <word name="$;"/>
            <word name="$%"/>
            <word name="$="/>
            <word name="$-"/>
            <word name="$~"/>
            <word name="$?"/>
<!--word name="$:"/-->
            <word name="$!"/>
            <word name="$@"/>
            <word name="$&lt;"/>
            <word name="$&gt;"/>
            <word name="$("/>
            <word name="$)"/>
            <word name="$_"/>
            <word name="$^L"/>
<!--word name="$$"/-->
            <word name="$^A"/>
            <word name="$^E"/>
            <word name="$^F"/>
            <word name="$^C"/>
            <word name="$^D"/>
            <word name="$^V"/>
            <word name="$^H"/>
            <word name="$^M"/>
            <word name="$^O"/>
            <word name="$^R"/>
            <word name="$^S"/>
            <word name="$^X"/>
            <word name="$^I"/>
            <word name="$^P"/>
            <word name="$^T"/>
            <word name="$^W"/>
            <word name="STDIN"/>
            <word name="STDOUT"/>
            <word name="STDERR"/>
            <word name="DATA"/>
            <word name="__FILE__"/>
            <word name="__PACKAGE__"/>
            <word name="__LINE__"/>
            <word name="__DIE__"/>
            <word name="__WARN__"/>
            <word name="ARGVOUT"/>
            <word name="stdin"/>
            <word name="stdout"/>
            <word name="stderr"/>
         </keywords>
         <regexp match="/\$\:\M[^\:]/x" region0="Var"/>
      </scheme>

      <scheme name="VarInt">
         <regexp match="/ (::|')? \w+ /x" region1="Symb"/>
      </scheme>

      <scheme name="Vars">
         <regexp match="/\* [^\w\s\{\$\@\%\(]/x" region0="Var"/>
         <inherit scheme="BuildinVars"/>
<!-- dynamic scheme's end regexp - cool :)  -->
         <block start="/[\@\%\*] \M [:'a-zA-Z]/x" end="//" scheme="VarInt" region="Var"/>
         <block start="/[\$\%\@\*]+ \#?(\{)/x" end="/(\})/" scheme="VarIntEx" region="Var" region00="def:PairStart" region10="def:PairEnd" region01="def:SymbolStrong" region11="def:SymbolStrong"/>
         <block start="/\$+ \#? \M [:'\w\$]/x" end="//" scheme="VarInt" region="Var"/>
      </scheme>

      <scheme name="VarsEx">
         <block start="/[\@\%\*] \M [:'\w]/x" end="//" scheme="VarInt" region="Var2" priority="low"/>
         <block start="/\$+ \#?\{/x" end="/\}/" scheme="VarInt" region="Var2" region00="def:PairStart" region10="def:PairEnd" priority="low"/>
         <block start="/\$+ \#? \M ['\w]/x" end="//" scheme="VarInt" region="Var" priority="low"/>
      </scheme>

      <scheme name="Pod">
         <inherit scheme="def:NetAddresses"/>
         <regexp match="/^=(pod|cut)/" region0="PodSym"/>
         <regexp match="/^=head[12]\s(.*)$/" region0="PodSym" region1="PodText"/>
         <regexp match="/^=(item|back|end)/" region0="PodSym"/>
         <regexp match="/^=over\s+(\d+)/" region0="PodSym" region1="Numb"/>
         <regexp match="/[IBSCLFXZE]&lt;.*?&gt;/" region0="PodSel"/>
      </scheme>

      <scheme name="BinNumb">
         <regexp match="/\b 0[bB][01]+ /ix" region0="def:NumberBin"/>
      </scheme>

      <scheme name="META"/>

      <scheme name="String">
         <inherit scheme="META"/>
<!-- Non-interpolated string ignore all escape-sequences except \' and \\ -->
         <regexp match="/\\['\\\/]/" region0="Slash"/>
      </scheme>

      <!-- EE: New scheme -->
      <scheme name="StringForRegExp">
         <inherit scheme="META"/>
         <inherit scheme="VarsEx"/>
      </scheme>

      <scheme name="InterpolateString">
         <inherit scheme="META"/>
         <inherit scheme="def:NetAddresses"/>
         <regexp match="/\b0[xX][\da-fA-F]+\b/" region0="Numb"/>
         <inherit scheme="def:FloatNumber"/>
         <inherit scheme="def:DecNumber"/>
         <inherit scheme="BinNumb"/>
<!-- cail: problems with s@ foo @ bar @ix;
              @ix is not a list :(( -->
         <inherit scheme="VarsEx"/>
<!-- <inherit scheme="BuildinVars"/> -->
         <regexp match="/\\[xX]0*[\da-fA-F]{1,2}/" region0="Slash"/>
         <regexp match="/\\[0-7]{1,3}/" region0="Slash"/>
         <regexp match="/\\c./" region0="Slash"/>
         <regexp match="/\\[^xX0-7]/" region0="Slash"/>
      </scheme>

      <scheme name="StrBr1">
         <regexp match="/\\[\(\)]/" region0="Slash"/>
         <block scheme="StrBr1" start="/\(/" end="/\)/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="StrBr2">
         <regexp match="/\\[\{\}]/" region0="Slash"/>
         <block scheme="StrBr2" start="/\{/" end="/\}/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="StrBr3">
         <regexp match="/(\\[\[\]])/" region0="Slash"/>
         <block scheme="StrBr3" start="/\[/" end="/\]/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="StrBr4">
         <regexp match="/(\\[&lt;\&gt;])/" region0="Slash"/>
         <block scheme="StrBr3" start="/&lt;/" end="/\&gt;/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="SubstComment">
<!-- are we need here  lowpriority="lowpriority" ??? -->
         <regexp match="/(^\s*|\s{2,})(\#\s.*$)/" region0="Comment"/>
      </scheme>

      <scheme name="SubstElements">
         <inherit scheme="InterpolateString"/>
         <inherit scheme="SubstComment"/>
      </scheme>

      
      <!-- EE!! include here pl1.modif.hrc (begin) -->

<scheme name="RegExpString">
 <inherit scheme="regexp:perl.regexp">
  <virtual scheme="regexp:string" subst-scheme="StringForRegExp"/>
  <virtual scheme="regexp:code" subst-scheme="perl"/>
  <virtual scheme="regexp:perl.regexp" subst-scheme="RegExpString"/>
 </inherit>
</scheme>


<scheme name="REIntStrBr1">
   <inherit scheme="RegExpString"/>
   <block scheme="REIntStrBr1" start="/\(/" end="/\)/"
          region00="def:PairStart" region10="def:PairEnd"/>
</scheme>
<scheme name="REIntStrBr2">
   <inherit scheme="RegExpString"/>
   <block scheme="REIntStrBr2" start="/\{/" end="/\}/"
          region00="def:PairStart" region10="def:PairEnd"/>
</scheme>
<scheme name="REIntStrBr3">
   <inherit scheme="RegExpString"/>
   <block scheme="REIntStrBr3" start="/\[/" end="/\]/"
          region00="def:PairStart" region10="def:PairEnd"/>
</scheme>
<scheme name="REIntStrBr4">
   <inherit scheme="RegExpString"/>
   <block scheme="REIntStrBr3" start="/&lt;/" end="/\>/"
          region00="def:PairStart" region10="def:PairEnd"/>
</scheme>


      <!-- EE!! include here pl1.modif.hrc (end) -->


      <scheme name="IntStrBr1">
         <inherit scheme="SubstElements"/>
         <block scheme="IntStrBr1" start="/\(/" end="/\)/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="IntStrBr2">
         <inherit scheme="SubstElements"/>
         <block scheme="IntStrBr2" start="/\{/" end="/\}/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="IntStrBr3">
         <inherit scheme="SubstElements"/>
         <block scheme="IntStrBr3" start="/\[/" end="/\]/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      <scheme name="IntStrBr4">
         <inherit scheme="SubstElements"/>
         <block scheme="IntStrBr3" start="/&lt;/" end="/\&gt;/" region00="def:PairStart" region10="def:PairEnd"/>
      </scheme>

      
      <!-- EE!! include here pl2.modif.hrc(begin) -->

<!-- schemes to support
     s(
       foo
     ) (
       bar
     )igx
-->
<!-- !!! EE: this change true for s/ .
€бе®¤­лҐ §­ зҐ­Ёп б®еа ­Ґ­л. …б«Ё ®­® Ўг¤Ґв Ј«озЁвм - ­ ¤® Ёе ў®ббв ­®ўЁвм.
!!! begin changed area
-->
<scheme name="SubstMiddle1">
   <block start="/~ (s|(tr)|y) \s* \( /x" end="/\)/x"
          scheme="REIntStrBr1" region10="StringEdge"/>
   <inherit scheme="SubstComment"/>
   <regexp match="/\S+?/" region0="def:Error" priority="low"/>
</scheme>


<scheme name="SubstBlock1">
   <block start="/~ \M (s|(tr)|y) \s* \( /x" end="/\M\(/x"
          scheme="SubstMiddle1" region10="StringEdge"/>
   <!-- inherit scheme="REIntStrBr1"/ -->
   <block start="/(\()/" end="/(\M\)([mgeioxs]*))/" scheme="perl" region="EvalText"
   region00="StringEdge" region01="def:PairStart" 
   region10="StringEdge" region11="def:PairEnd"/>
</scheme>

<scheme name="SubstMiddle2">
   <block start="/~ (s|(tr)|y) \s* \{ /x" end="/\}/x"
          scheme="REIntStrBr2" region10="StringEdge"/>
   <inherit scheme="SubstComment"/>
   <regexp match="/\S+/" region0="def:Error" priority="low"/>
</scheme>
<scheme name="SubstBlock2">
   <block start="/~ \M (s|(tr)|y) \s* \{ /x" end="/\M\{/x"
          scheme="SubstMiddle2" region10="StringEdge"/>
   <!-- inherit scheme="REIntStrBr2"/ -->
   <block start="/(\{)/" end="/(\M\}([mgeioxs]*))/" scheme="perl" region="EvalText"
   region00="StringEdge" region01="def:PairStart" 
   region10="StringEdge" region11="def:PairEnd"/>
    
</scheme>


<scheme name="SubstMiddle3">
   <block start="/~ (s|(tr)|y) \s* \[ /x" end="/\]/x"
          scheme="REIntStrBr3" region10="StringEdge"/>
   <inherit scheme="SubstComment"/>
   <regexp match="/\S+/" region0="def:Error" priority="low"/>
</scheme>
<scheme name="SubstBlock3">
   <block start="/~ \M (s|(tr)|y) \s* \[ /x" end="/\M\[/x"
          scheme="SubstMiddle3" region10="StringEdge"/>
   <!-- inherit scheme="REIntStrBr3"/ -->
   <block start="/(\[)/" end="/(\M\]([mgeioxs]*))/" scheme="perl" region="EvalText"
   region00="StringEdge" region01="def:PairStart" 
   region10="StringEdge" region11="def:PairEnd"/>
</scheme>

<scheme name="SubstMiddle4">
   <block start="/~ (s|(tr)|y) \s* &lt; /x" end="/\>/x"
          scheme="REIntStrBr4" region10="StringEdge"/>
   <inherit scheme="SubstComment"/>
   <regexp match="/\S+/" region0="def:Error" priority="low"/>
</scheme>
<scheme name="SubstBlock4">
   <block start="/~ \M (s|(tr)|y) \s* &lt; /x" end="/\M&lt;/x"
          scheme="SubstMiddle4" region10="StringEdge"/>
   <!-- inherit scheme="REIntStrBr4"/ -->
   <block start="/(&lt;)/" end="/(\M\>([mgeioxs]*))/" scheme="perl" region="EvalText"
   region00="StringEdge" region01="def:PairStart" 
   region10="StringEdge" region11="def:PairEnd"/>
</scheme>

<scheme name="SubstBlock">
   <block start="/~ (s|(tr)|y) ([^\w\s]) /x" end="/\y3/x"
          scheme="RegExpString" region10="StringEdge"/>
   
   <block start="/~ (s|tr|y) \s+ (\w) /x" end="/\y3/x" 
    scheme="RegExpString" region10="StringEdge"
   />
   <!-- May_be!!
   <inherit scheme="InterpolateString"/>
   -->
   <inherit scheme="SubstElements"/>
</scheme>
      <!-- EE!! include here pl2.modif.hrc(end) -->

      
      <!-- EE!! cut here (begin)
      <scheme name="SubstMiddle1">
         <block start="/~ (s|tr|y) \s* \( /x" end="/\)/x" scheme="IntStrBr1" region10="StringEdge"/>
         <inherit scheme="SubstComment"/>
         <regexp match="/\S+?/" region0="def:Error" priority="low"/>
      </scheme>

      <scheme name="SubstBlock1">
         <block start="/~ \M (s|tr|y) \s* \( /x" end="/\(/x" scheme="SubstMiddle1" region10="StringEdge"/>
         <inherit scheme="IntStrBr1"/>
      </scheme>

      <scheme name="SubstMiddle2">
         <block start="/~ (s|tr|y) \s* \{ /x" end="/\}/x" scheme="IntStrBr2" region10="StringEdge"/>
         <inherit scheme="SubstComment"/>
         <regexp match="/\S+/" region0="def:Error" priority="low"/>
      </scheme>

      <scheme name="SubstBlock2">
         <block start="/~ \M (s|tr|y) \s* \{ /x" end="/\{/x" scheme="SubstMiddle2" region10="StringEdge"/>
         <inherit scheme="IntStrBr2"/>
      </scheme>

      <scheme name="SubstMiddle3">
         <block start="/~ (s|tr|y) \s* \[ /x" end="/\]/x" scheme="IntStrBr3" region10="StringEdge"/>
         <inherit scheme="SubstComment"/>
         <regexp match="/\S+/" region0="def:Error" priority="low"/>
      </scheme>

      <scheme name="SubstBlock3">
         <block start="/~ \M (s|tr|y) \s* \[ /x" end="/\[/x" scheme="SubstMiddle3" region10="StringEdge"/>
         <inherit scheme="IntStrBr3"/>
      </scheme>

      <scheme name="SubstMiddle4">
         <block start="/~ (s|tr|y) \s* &lt; /x" end="/\&gt;/x" scheme="IntStrBr4" region10="StringEdge"/>
         <inherit scheme="SubstComment"/>
         <regexp match="/\S+/" region0="def:Error" priority="low"/>
      </scheme>

      <scheme name="SubstBlock4">
         <block start="/~ \M (s|tr|y) \s* &lt; /x" end="/&lt;/x" scheme="SubstMiddle4" region10="StringEdge"/>
         <inherit scheme="IntStrBr4"/>
      </scheme>

      <scheme name="SubstBlock">
         <block start="/~ (s|tr|y) ([^\w\s]) /x" end="/\y2/x" scheme="SubstElements" region10="StringEdge"/>
         <block start="/~ (s|tr|y) \s+ (\w) /x" end="/\y2/x" scheme="SubstElements" region10="StringEdge"/>
         <inherit scheme="SubstElements"/>
      </scheme>
      - EE!! cut here (end) -->

      <!-- EE: scheme for documet format -->
      <scheme name="FormatText">
       <inherit scheme="InterpolateString"/>
       <regexp match="/([\@\^])(\*|[&lt;&gt;\|]+)/" 
        region1="def:SymbolStrong" region2="def:Symbol"/>
       <regexp match="/([\@\^])(\#+(\.\#+)?)/" 
        region1="def:SymbolStrong" region2="def:VarStrong"/>
      </scheme>

      <scheme name="perl">
<!-- linear comments -->
         <block start="/;?\#/" end="/$/" region="Comment" scheme="def:Comment"/>
<!-- Variables -->
         <inherit scheme="Vars"/>
         <regexp match="/\b(sub) \s+ \M (?{SubOutline}[\w_']+) /x" region="Word"/>
         <regexp match="/\b(package) \s+ \M (?{PackageOutline}[\w_']+) /x" region="Word"/>
<!-- module::var -->
         <regexp match="/\b\w[\w\d]*\s*::\s*\w[\w\d]*\b/" region="Word"/>
<!-- perl 5.6.0 number-encoded strings -->
         <regexp match="/\bv(\d+)(\.\d+)*\b/" region0="String"/>
         <regexp match="/\b(\d+)(\.\d+){2,}\b/" region0="String"/>
<!-- perl numbers  -->
         <inherit scheme="BinNumb"/>
         <regexp match="/\b0[xX][\da-fA-F_]+/" region0="Numb"/>
         <regexp match="/\b\d[\d_]*\./" region0="Numb"/>
         <regexp match="/\c[\d_]*\.?\d[\d_]*([eE][\-+]?[\d_]+)?/" region0="Numb"/>
         <regexp match="/\b\d[\d_]+/" region0="Numb"/>
<!-- strings -->
         <block start="/`/" end="/`/" scheme="InterpolateString" region="String" region00="def:PairStart" region10="def:PairEnd"/>
         <block start="/&#34;/" end="/&#34;/" scheme="InterpolateString" region="String" region00="def:PairStart" region10="def:PairEnd"/>
         <block start="/'/" end="/'/" scheme="String" region="String" region00="def:PairStart" region10="def:PairEnd"/>
<!-- cail: paired block for matching -->
         <inherit scheme="def:PairedBrackets">
            <virtual scheme="def:PairedBrackets" subst-scheme="perl"/>
         </inherit>
<!-- cail: this block cracks the constructions
     $var = $var / $var / $var;
     $var =~ / $var /;
     if (/ $var /){};
     and so on...

     can't use ?regexp? - it conflicts with  $a = $b ? 1 : 2;
     really ?this? is deprecated construction in perl5, so...
   -->

      
<!-- EE: move ~ to separated block (s{}{/... - '/' no regexp ) -->
      <!-- EE!! include here pl3.modif.hrc(begin) -->
   <block start="/((\=|\! \~) |
                  [^&lt;\]\}\)\+\-\w\s\/] |
                  (\bif) | (\bunless) | (\bsplit) | ^ )
                 \s*
                 ((\/))
                /x"
          end="/(\y6([cmiogxes]*) )/x" scheme="RegExpString"
          region="String" region01="Symb"
          region06="StringEdge" region07="def:PairStart"
          region10="StringEdge" region11="def:PairEnd" region12="ReModif"/>
   <block start="/([\)\}\]\>])?~2(~)
                 \s*
                 ((\/))
                /x"
          end="/(\y3([cmiogxes]*) )/x" scheme="RegExpString"
          region="String" region01="Symb"
          region03="StringEdge" region04="def:PairStart"
          region10="StringEdge" region11="def:PairEnd" region12="ReModif"/>
      <!-- EE!! include here pl3.modif.hrc(end) -->

      
   
      <!-- EE!! cut here (begin) ->
         <block start="/( [\=\!]\~ |
                         [^&lt;\]\}\)\+\-\w\s\/] |
                         \bif | \bunless | \bsplit | ~ | ^)
                         \s* ((\/)) /x"
                         end="/(\y2[cmiogxes]*)/x" scheme="RegExpString"
                         region="String" region01="Symb" region02="StringEdge"
                         region03="def:PairStart" region10="StringEdge" region11="def:PairEnd"/>
      <!- EE!! cut here (end) -->

<!-- formatted output -->
         <block start="/^\s* \m (format)\s*(\s\w*)\s*(\=) /x" end="/^(\.)/" 
          scheme="FormatText" region="FormatDoc" 
          region01="Word" region02="Var" region03="Symb"
          region00="def:PairStart" region10="def:PairEnd" region11="StringEdge"
         />
<!-- <<out -->
         <block start="/&lt;&lt;\x22([a-zA-Z_][\w_]*)\x22/" end="/^(\y1)$/" scheme="InterpolateString" region="HereDoc" region00="def:PairStart" region10="def:PairEnd" region01="Word" region11="Word"/>
         <block start="/&lt;&lt;'([a-zA-Z_][\w_]*)'/" end="/^(\y1)$/" scheme="def:Comment" region="HereDoc" region00="def:PairStart" region10="def:PairEnd" region01="Word" region11="Word"/>
         <block start="/&lt;&lt;`([a-zA-Z_][\w_]*)`/" end="/^(\y1)$/" scheme="def:Comment" region="HereDoc" region00="def:PairStart" region10="def:PairEnd" region01="Word" region11="Word"/>
         <block start="/&lt;&lt;([a-zA-Z_][\w_]*)/" end="/^(\y1)$/" scheme="InterpolateString" region="HereDoc" region00="def:PairStart" region10="def:PairEnd" region01="Word" region11="Word"/>
         <block start="/&lt;&lt;\M([^\s\w_])/" end="/^$/" scheme="InterpolateString" region="HereDoc" region00="def:PairStart" region10="def:PairEnd" region01="Word" region11="Word"/>
<!-- cail: perl in perl :)
   <block start="/(eval)\s+<<'([^']+)'/i" end="/^(\y2)$/" scheme="def:Perl" region1="def:Inserts" region2="Word" region3="Word" region4="Word"-->
<!-- pod stuff -->
         <block start="/\M^=/" end="/^=(head|cut)\m/" scheme="Pod" region="Pod" region10="PodSym"/>
         <block start="/__(END|DATA)__/" end="/$NeVeReAcH^/" scheme="Pod" region="Pod"/>
<!-- streams and globs with html </script> hack -->
         <regexp match="/&lt;[^\s\/\%]*?\&gt;/i" region0="Stream"/>
         <regexp match="/\B \- [ABCMORSTWXbcdefgkloprstuwxz]\b/x" region0="Word"/>
         <regexp match="/x(\d+)/x" region0="Word" region1="Numb"/>


         <inherit scheme="Keywords"/>
         <inherit scheme="ExtKW"/>

<!-- cail: regexps
        in reallity  s'foo'bar' does no interpolation - but i thing this
          isn't so important :)
        currently this subst will not work in such cases:
         s        # here we can't know which of schemes was called :(
         {        #
          foo
         }        # but such form is works :)
         {        #
          bar
         }ix;
        but i think this is real perversion :)
   -->

      
      <!-- EE!! include here pl4.modif.hrc (begin) -->
   <block start="/\b\M(((s|(tr)|y) \s* \())/x" end="/(\)([mgeioxs]*))/x"
          scheme="SubstBlock1" region="String"
          region01="def:PairStart" region10="def:PairEnd"
          region02="StringEdge" region11="StringEdge" region12="ReModif"/>
   <block start="/\b\M(((s|(tr)|y) \s* \{))/x" end="/(\}([mgeioxs]*))/x"
          scheme="SubstBlock2" region="String"
          region01="def:PairStart" region10="def:PairEnd"
          region02="StringEdge" region11="StringEdge" region12="ReModif"/>
   <block start="/\b\M(((s|(tr)|y) \s* \[))/x" end="/(\]([mgeioxs]*))/x"
          scheme="SubstBlock3" region="String"
          region01="def:PairStart" region10="def:PairEnd"
          region02="StringEdge" region11="StringEdge" region12="ReModif"/>
   <block start="/\b\M(((s|(tr)|y) \s* &lt;))/x" end="/(\>([mgeioxs]*))/x"
          scheme="SubstBlock4" region="String"
          region01="def:PairStart" region10="def:PairEnd"
          region02="StringEdge" region11="StringEdge" region12="ReModif"/>
   <block start="/\b\M(((s|(tr)|y) \s* ([^\w\s])))/x" end="/(\y5([mgeioxs]*))/x"
          scheme="SubstBlock" region="String"
          region01="def:PairStart" region10="def:PairEnd"
          region02="StringEdge" region11="StringEdge" region12="ReModif"/>

   <!-- Timur: see `perldoc perlop`
       "Quote and Quote-like Operators " -->
<!-- EE bugfix(4 blocks): add [mgeioxs]* to end -->
   <block start="/\b(qr\s*\()/" end="/(\)([mgeioxs]*))/" region="String" scheme="REIntStrBr1"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
   <block start="/\b(qr\s*\{)/" end="/(\}([mgeioxs]*))/" region="String" scheme="REIntStrBr2"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
   <block start="/\b(qr\s*\[)/" end="/(\]([mgeioxs]*))/" region="String" scheme="REIntStrBr3"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
   <block start="/\b(qr\s*&lt;)/" end="/(\>([mgeioxs]*))/" region="String" scheme="REIntStrBr4"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
<!-- EE: change perlInterpolateString->perlRegExpString -->
   <block start="/\b(qr\s*([^\w\s]))/" end="/(\y2([mgeioxs]*))/" region="String" scheme="RegExpString"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>

   <block start="/\b(q[qx]\s*\()/" end="/(\))/" region="String" scheme="IntStrBr1"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q[qx]\s*\{)/" end="/(\})/" region="String" scheme="IntStrBr2"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q[qx]\s*\[)/" end="/(\])/" region="String" scheme="IntStrBr3"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q[qx]\s*&lt;)/" end="/(\>)/" region="String" scheme="IntStrBr4"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q[qx]\s*([^\w\s]))/" end="/(\y2)/" region="String" scheme="InterpolateString"
          region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>

   <block start="/\b(q(w)?\s*\()/" end="/(\))/" region="String" scheme="StrBr1"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q(w)?\s*\{)/" end="/(\})/" region="String" scheme="StrBr2"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q(w)?\s*\[)/" end="/(\])/" region="String" scheme="StrBr3"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q(w)?\s*&lt;)/" end="/(\>)/" region="String" scheme="StrBr4"
          region00="StringEdge"  region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>
   <block start="/\b(q(w)?\s*([^\w\s]))/" end="/(\y3)/" region="String" scheme="String"
          region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd"/>

          
   <block start="/\b(m \s* \()/x" end="/(\)([cmiogxs]*))/" scheme="REIntStrBr1"
          region="String" region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
   <block start="/\b(m \s* \{)/x" end="/(\}([cmiogxs]*))/" scheme="REIntStrBr2"
          region="String" region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
   <block start="/\b(m \s* \[)/x" end="/(\]([cmiogxs]*))/" scheme="REIntStrBr3"
          region="String" region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
   <block start="/\b(m \s* &lt;)/x" end="/(\>([cmiogxs]*))/" scheme="REIntStrBr4"
          region="String" region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
<!-- EE: change perlInterpolateString->perlRegExpString -->
   <block start="/\b(m \s* ([^\s\w]))/x" end="/(\y2([cmiogxs]*))/" scheme="RegExpString"
          region="String" region00="StringEdge" region10="StringEdge"
          region01="def:PairStart" region11="def:PairEnd" region12="ReModif"/>
      <!-- EE!! include here pl4.modif.hrc (end) -->

      
   
      <!-- EE!! cut here (begin) 
         <block start="/\b\M(((s|tr|y) \s* \())/x" end="/(\) [mgeioxs]*)/x" scheme="SubstBlock1" region="String" region01="def:PairStart" region10="def:PairEnd" region02="StringEdge" region11="StringEdge"/>
         <block start="/\b\M(((s|tr|y) \s* \{))/x" end="/(\} [mgeioxs]*)/x" scheme="SubstBlock2" region="String" region01="def:PairStart" region10="def:PairEnd" region02="StringEdge" region11="StringEdge"/>
         <block start="/\b\M(((s|tr|y) \s* \[))/x" end="/(\] [mgeioxs]*)/x" scheme="SubstBlock3" region="String" region01="def:PairStart" region10="def:PairEnd" region02="StringEdge" region11="StringEdge"/>
         <block start="/\b\M(((s|tr|y) \s* &lt;))/x" end="/(\&gt; [mgeioxs]*)/x" scheme="SubstBlock4" region="String" region01="def:PairStart" region10="def:PairEnd" region02="StringEdge" region11="StringEdge"/>
         <block start="/\b\M(((s|tr|y) \s* ([^\w\s])))/x" end="/(\y4 [mgeioxs]*)/x" scheme="SubstBlock" region="String" region01="def:PairStart" region10="def:PairEnd" region02="StringEdge" region11="StringEdge"/>
         <block start="/\b\M(((s|tr|y) \s+ (\w)))/x" end="/(\y4 [mgeioxs]*)/x" scheme="SubstBlock" region="String" region01="def:PairStart" region10="def:PairEnd" region02="StringEdge" region11="StringEdge"/>
<!- Timur: see `perldoc perlop`
       "Quote and Quote-like Operators " ->
         <block start="/\b(q[wqxr]\s*\()/" end="/(\))/" region="String" scheme="IntStrBr1" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q[wqxr]\s*\{)/" end="/(\})/" region="String" scheme="IntStrBr2" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q[wqxr]\s*\[)/" end="/(\])/" region="String" scheme="IntStrBr3" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q[wqxr]\s*&lt;)/" end="/(\&gt;)/" region="String" scheme="IntStrBr4" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q[wqxr]\s*([^\s]))/" end="/(\y2)/" region="String" scheme="InterpolateString" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q(w)?\s*\()/" end="/(\))/" region="String" scheme="StrBr1" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q(w)?\s*\{)/" end="/(\})/" region="String" scheme="StrBr2" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q(w)?\s*\[)/" end="/(\])/" region="String" scheme="StrBr3" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q(w)?\s*&lt;)/" end="/(\&gt;)/" region="String" scheme="StrBr4" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(q(w)?\s*([^\w\s]))/" end="/(\y3)/" region="String" scheme="String" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(m \s* \()/x" end="/(\)[cmiogxs]*)/" scheme="IntStrBr1" region="String" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(m \s* \{)/x" end="/(\}[cmiogxs]*)/" scheme="IntStrBr2" region="String" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(m \s* \[)/x" end="/(\][cmiogxs]*)/" scheme="IntStrBr3" region="String" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(m \s* &lt;)/x" end="/(\&gt;[cmiogxs]*)/" scheme="IntStrBr4" region="String" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
         <block start="/\b(m \s* ([^\s\w]))/x" end="/(\y2[cmiogxs]*)/" scheme="InterpolateString" region="String" region00="StringEdge" region10="StringEdge" region01="def:PairStart" region11="def:PairEnd"/>
      - EE!! cut here (end) -->
<!-- Timur: hack against Ada maniacs -->
         <regexp match="/\c(&amp;|\w+)'[\w_']+\b/" region0="Var"/>
<!-- operators -->
         <keywords region="Symb">
            <symb name="!"/>
            <symb name="~"/>
            <symb name="\"/>
            <symb name="+"/>
            <symb name="-"/>
            <symb name="."/>
            <symb name="*"/>
            <symb name="/"/>
            <symb name=".."/>
            <symb name="%"/>
            <word name="lt"/>
            <word name="gt"/>
            <word name="le"/>
            <word name="ge"/>
            <word name="eq"/>
            <word name="ne"/>
            <word name="cmp"/>
            <symb name="&amp;"/>
            <symb name="|"/>
            <symb name="^"/>
            <symb name="?"/>
            <symb name=":"/>
            <symb name=","/>
            <symb name="="/>
            <word name="and"/>
            <word name="not"/>
            <word name="or"/>
            <word name="xor"/>
            <symb name="-&gt;"/>
            <symb name="&gt;"/>
            <symb name="&lt;"/>
            <symb name=";" region="MainSymb"/>
            <symb name="{" region="def:Error"/>
            <symb name="}" region="def:Error"/>
            <symb name="(" region="def:Error"/>
            <symb name=")" region="def:Error"/>
            <symb name="[" region="def:Error"/>
            <symb name="]" region="def:Error"/>
         </keywords>
      
         <!-- EE: labels -->
         <regexp match="/^\s*(\w+\:)\M(\s|$)/" region1="def:Label"/>

      </scheme>

      <scheme name="VarIntEx">
         <regexp match="/ (::|')? \w+ /x" region1="Symb"/>
         <inherit scheme="perl"/>
      </scheme>
      
      
      
      <scheme name="Keywords">
<!-- base syntax -->
         <keywords region="Word">
            <word name="sub"/>
            <word name="do"/>
            <word name="return"/>
            <word name="while"/>
            <word name="until"/>
            <word name="unless"/>
            <word name="if"/>
            <word name="else"/>
            <word name="elsif"/>
            <word name="foreach"/>
            <word name="for"/>
            <word name="continue"/>
            <word name="next"/>
            <word name="last"/>
            <word name="redo"/>
            <word name="goto" region="Rare"/>
            <word name="our"/>
            <word name="__DATA__" region="Rare"/>
            <word name="__END__" region="Rare"/>
            <word name="no"/>
            <word name="use"/>
            <word name="require"/>
            <word name="package"/>
            <word name="strict"/>
            <word name="local"/>
            <word name="my"/>
<!-- functions -->
            <word name="AUTOLOAD"/>
            <word name="BEGIN"/>
            <word name="INIT"/>
            <word name="CHECK"/>
            <word name="CORE"/>
            <word name="DESTROY"/>
            <word name="END"/>
            <word name="SUPER"/>
            <word name="UNIVERSAL"/>
            <word name="abs"/>
            <word name="accept"/>
            <word name="alarm"/>
            <word name="atan2"/>
            <word name="bind"/>
            <word name="binmode"/>
            <word name="bless"/>
            <word name="caller"/>
            <word name="chdir"/>
            <word name="chmod"/>
            <word name="chomp"/>
            <word name="chop"/>
            <word name="chown"/>
            <word name="chr"/>
            <word name="chroot"/>
            <word name="close"/>
            <word name="closedir"/>
            <word name="connect"/>
            <word name="cos"/>
            <word name="crypt"/>
            <word name="dbmclose"/>
            <word name="dbmopen"/>
            <word name="defined"/>
            <word name="delete"/>
            <word name="die"/>
            <word name="dump"/>
            <word name="each"/>
            <word name="endgrent"/>
            <word name="endhostent"/>
            <word name="endnetent"/>
            <word name="endprotoent"/>
            <word name="endpwent"/>
            <word name="endservent"/>
            <word name="eof"/>
            <word name="eval"/>
            <word name="exec"/>
            <word name="exit"/>
            <word name="exp"/>
            <word name="fcntl"/>
            <word name="fileno"/>
            <word name="flock"/>
            <word name="fork"/>
            <word name="formline"/>
            <word name="getc"/>
            <word name="getgrent"/>
            <word name="getgrgid"/>
            <word name="getgrname"/>
            <word name="gethostbyaddr"/>
            <word name="gethostbyname"/>
            <word name="gethostent"/>
            <word name="getlogin"/>
            <word name="getnetbyaddr"/>
            <word name="getnetbyname"/>
            <word name="getnetent"/>
            <word name="getpeername"/>
            <word name="getpgrp"/>
            <word name="getppid"/>
            <word name="getpriority"/>
            <word name="getprotobyname"/>
            <word name="getprotobynumber"/>
            <word name="getprotoent"/>
            <word name="getpwent"/>
            <word name="getpwnam"/>
            <word name="getpwuid"/>
            <word name="getservbyname"/>
            <word name="getservbyport"/>
            <word name="getservent"/>
            <word name="getsockname"/>
            <word name="getsockopt"/>
            <word name="glob"/>
            <word name="gmtime"/>
            <word name="grep"/>
            <word name="hex"/>
            <word name="index"/>
            <word name="int"/>
            <word name="ioctl"/>
            <word name="join"/>
            <word name="keys"/>
            <word name="kill"/>
            <word name="lc"/>
            <word name="lcfirst"/>
            <word name="length"/>
            <word name="link"/>
            <word name="listen"/>
            <word name="localtime"/>
            <word name="log"/>
            <word name="lstat"/>
            <word name="map"/>
            <word name="mkdir"/>
            <word name="msgctl"/>
            <word name="msgget"/>
            <word name="msgrcv"/>
            <word name="msgsnd"/>
            <word name="oct"/>
            <word name="open"/>
            <word name="opendir"/>
            <word name="ord"/>
            <word name="pack"/>
            <word name="pipe"/>
            <word name="pop"/>
            <word name="pos"/>
            <word name="print"/>
            <word name="printf"/>
            <word name="push"/>
            <word name="quotemeta"/>
            <word name="rand"/>
            <word name="read"/>
            <word name="readdir"/>
            <word name="readline"/>
            <word name="readlink"/>
            <word name="recv"/>
            <word name="ref"/>
            <word name="rename"/>
            <word name="reset"/>
            <word name="reverse"/>
            <word name="rewindir"/>
            <word name="rindex"/>
            <word name="rmdir"/>
            <word name="scalar"/>
            <word name="seek"/>
            <word name="seekdir"/>
            <word name="select"/>
            <word name="semctl"/>
            <word name="semgett"/>
            <word name="semop"/>
            <word name="send"/>
            <word name="setgrent"/>
            <word name="sethostent"/>
            <word name="setnetent"/>
            <word name="setpgrp"/>
            <word name="setpriority"/>
            <word name="setprotoent"/>
            <word name="setpwent"/>
            <word name="setservent"/>
            <word name="setsockopt"/>
            <word name="shift"/>
            <word name="shmctl"/>
            <word name="shmget"/>
            <word name="shmread"/>
            <word name="shmwrite"/>
            <word name="shutdown"/>
            <word name="sin"/>
            <word name="sleep"/>
            <word name="socket"/>
            <word name="socketpair"/>
            <word name="sort"/>
            <word name="splice"/>
            <word name="split"/>
            <word name="sprintf"/>
            <word name="sqrt"/>
            <word name="srand"/>
            <word name="stat"/>
            <word name="study"/>
            <word name="substr"/>
            <word name="symlink"/>
            <word name="syscall"/>
            <word name="sysopen"/>
            <word name="sysread"/>
            <word name="system"/>
            <word name="syswrite"/>
            <word name="tell"/>
            <word name="telldir"/>
            <word name="tie"/>
            <word name="untie"/>
            <word name="exists"/>
            <word name="rewinddir"/>
            <word name="semget"/>
            <word name="lock"/>
            <word name="readpipe"/>
            <word name="prototype"/>
            <word name="sysseek"/>
            <word name="getgrnam"/>
            <word name="tied"/>
            <word name="time"/>
            <word name="times"/>
            <word name="truncate"/>
            <word name="uc"/>
            <word name="ucfirst"/>
            <word name="umask"/>
            <word name="undef"/>
            <word name="unlink"/>
            <word name="unpack"/>
            <word name="unshift"/>
            <word name="utime"/>
            <word name="values"/>
            <word name="vec"/>
            <word name="wait"/>
            <word name="waitpid"/>
            <word name="wantarray"/>
            <word name="warn"/>
            <word name="write"/>
            <word name="x"/>
         </keywords>
      </scheme>
      
      <scheme name="ExtKW">
         <keywords region="Word">
            <word name="Alias"/>
            <word name="AnyDBM_File"/>
            <word name="Archive::Tar"/>
            <word name="AutoLoader"/>
            <word name="AutoSplit"/>
            <word name="B"/>
            <word name="B::Asmdata"/>
            <word name="B::Assembler"/>
            <word name="B::Bblock"/>
            <word name="B::Bytecode"/>
            <word name="B::C"/>
            <word name="B::CC"/>
            <word name="B::Debug"/>
            <word name="B::Deparse"/>
            <word name="B::Disassembler"/>
            <word name="B::Graph"/>
            <word name="B::Lint"/>
            <word name="B::Showlex"/>
            <word name="B::Stackobj"/>
            <word name="B::Terse"/>
            <word name="B::Xref"/>
            <word name="Benchmark"/>
            <word name="Bit::ShiftReg"/>
            <word name="Bit::Vector"/>
            <word name="Bundle::DBD::CSV"/>
            <word name="Bundle::DBI"/>
            <word name="Bundle::LWP"/>
            <word name="Business::CreditCard"/>
            <word name="ByteLoader"/>
            <word name="CGI"/>
            <word name="CGI::Apache"/>
            <word name="CGI::Carp"/>
            <word name="CGI::Cookie"/>
            <word name="CGI::Fast"/>
            <word name="CGI::Imagemap"/>
            <word name="CGI::Pretty"/>
            <word name="CGI::Push"/>
            <word name="CGI::Screen"/>
            <word name="CGI::Switch"/>
            <word name="CGI::XMLForm"/>
            <word name="CPAN"/>
            <word name="CPAN::FirstTime"/>
            <word name="CPAN::Nox"/>
            <word name="Carp"/>
            <word name="Carp::Heavy"/>
            <word name="Chart"/>
            <word name="Class::Eroot"/>
            <word name="Class::MethodMaker"/>
            <word name="Class::Struct"/>
            <word name="Class::Template"/>
            <word name="Class::Tom"/>
            <word name="Compress::Zlib"/>
            <word name="Config"/>
            <word name="Convert::BER"/>
            <word name="Cwd"/>
            <word name="DB"/>
            <word name="DBD::ADO"/>
            <word name="DBD::CSV"/>
            <word name="DBD::File"/>
            <word name="DBD::ODBC"/>
            <word name="DBD::Oracle"/>
            <word name="DBD::Proxy"/>
            <word name="DBD::Sybase"/>
            <word name="DBI"/>
            <word name="DBI::DBD"/>
            <word name="DBI::FAQ"/>
            <word name="DBI::Format"/>
            <word name="DBI::ProxyServer"/>
            <word name="DBI::Shell"/>
            <word name="DBI::W32ODBC"/>
            <word name="DB_File"/>
            <word name="Data::Dumper"/>
            <word name="Date::Calc"/>
            <word name="Date::Format"/>
            <word name="Date::Manip"/>
            <word name="Date::Parse"/>
            <word name="Devel::Coverage"/>
            <word name="Devel::DProf"/>
            <word name="Devel::Peek"/>
            <word name="Devel::SelfStubber"/>
            <word name="Devel::Symdump"/>
            <word name="Digest"/>
            <word name="Digest::HMAC"/>
            <word name="Digest::HMAC_MD5"/>
            <word name="Digest::HMAC_SHA1"/>
            <word name="Digest::MD2"/>
            <word name="Digest::MD5"/>
            <word name="Digest::SHA1"/>
            <word name="DirHandle"/>
            <word name="Dumpvalue"/>
            <word name="DynaLoader"/>
            <word name="English"/>
            <word name="Env"/>
            <word name="Errno"/>
            <word name="Exporter"/>
            <word name="Exporter::Heavy"/>
            <word name="ExtUtils::Command"/>
            <word name="ExtUtils::Embed"/>
            <word name="ExtUtils::Install"/>
            <word name="ExtUtils::Installed"/>
            <word name="ExtUtils::Liblist"/>
            <word name="ExtUtils::MM_Cygwin"/>
            <word name="ExtUtils::MM_OS2"/>
            <word name="ExtUtils::MM_Unix"/>
            <word name="ExtUtils::MM_VMS"/>
            <word name="ExtUtils::MM_Win32"/>
            <word name="ExtUtils::MakeMaker"/>
            <word name="ExtUtils::Manifest"/>
            <word name="ExtUtils::Miniperl"/>
            <word name="ExtUtils::Mkbootstrap"/>
            <word name="ExtUtils::Mksymlists"/>
            <word name="ExtUtils::Packlist"/>
            <word name="ExtUtils::testlib"/>
            <word name="Fatal"/>
            <word name="Fcntl"/>
            <word name="File::Basename"/>
            <word name="File::CheckTree"/>
            <word name="File::Compare"/>
            <word name="File::Copy"/>
            <word name="File::Copy"/>
            <word name="File::CounterFile"/>
            <word name="File::DosGlob"/>
            <word name="File::Find"/>
            <word name="File::Glob"/>
            <word name="File::Listing"/>
            <word name="File::Path"/>
            <word name="File::Recurse"/>
            <word name="File::Slurp"/>
            <word name="File::Spec"/>
            <word name="File::Spec::Functions"/>
            <word name="File::Spec::Mac"/>
            <word name="File::Spec::OS2"/>
            <word name="File::Spec::Unix"/>
            <word name="File::Spec::VMS"/>
            <word name="File::Spec::Win32"/>
            <word name="File::Tools"/>
            <word name="File::stat"/>
            <word name="FileCache"/>
            <word name="FileHandle"/>
            <word name="FindBin"/>
            <word name="Font::AFM"/>
            <word name="GD"/>
            <word name="GDBM_File"/>
            <word name="Getopt::EvaP"/>
            <word name="Getopt::Long"/>
            <word name="Getopt::Mixed"/>
            <word name="Getopt::Std"/>
            <word name="Getopt::Tabular"/>
            <word name="Graph::Kruskal"/>
            <word name="HTML::AsSubs"/>
            <word name="HTML::Element"/>
            <word name="HTML::Entities"/>
            <word name="HTML::Filter"/>
            <word name="HTML::FormatPS"/>
            <word name="HTML::FormatText"/>
            <word name="HTML::Formatter"/>
            <word name="HTML::HeadParser"/>
            <word name="HTML::LinkExtor"/>
            <word name="HTML::Parse"/>
            <word name="HTML::Parser"/>
            <word name="HTML::Stream"/>
            <word name="HTML::Template"/>
            <word name="HTML::TokeParser"/>
            <word name="HTML::TreeBuilder"/>
            <word name="HTTP::Cookies"/>
            <word name="HTTP::Daemon"/>
            <word name="HTTP::Date"/>
            <word name="HTTP::Headers"/>
            <word name="HTTP::Headers::Util"/>
            <word name="HTTP::Message"/>
            <word name="HTTP::Negotiate"/>
            <word name="HTTP::Request"/>
            <word name="HTTP::Request::Common"/>
            <word name="HTTP::Response"/>
            <word name="HTTP::Status"/>
            <word name="I18N::Collate"/>
            <word name="IO"/>
            <word name="IO::AtomicFile"/>
            <word name="IO::Dir"/>
            <word name="IO::File"/>
            <word name="IO::Handle"/>
            <word name="IO::Lines"/>
            <word name="IO::Pipe"/>
            <word name="IO::Poll"/>
            <word name="IO::Scalar"/>
            <word name="IO::ScalarArray"/>
            <word name="IO::Seekable"/>
            <word name="IO::Select"/>
            <word name="IO::Socket"/>
            <word name="IO::Socket::INET"/>
            <word name="IO::Socket::UNIX"/>
            <word name="IO::Stringy"/>
            <word name="IO::Wrap"/>
            <word name="IO::WrapTie"/>
            <word name="IPC::Msg"/>
            <word name="IPC::Open2"/>
            <word name="IPC::Open3"/>
            <word name="IPC::Semaphore"/>
            <word name="IPC::SysV"/>
            <word name="Image::Size"/>
            <word name="LWP"/>
            <word name="LWP::Debug"/>
            <word name="LWP::MediaTypes"/>
            <word name="LWP::MemberMixin"/>
            <word name="LWP::Protocol"/>
            <word name="LWP::RobotUA"/>
            <word name="LWP::Simple"/>
            <word name="LWP::UserAgent"/>
            <word name="Locale::Country"/>
            <word name="Locale::Language"/>
            <word name="MD5"/>
            <word name="MIME::Base64"/>
            <word name="MIME::Lite"/>
            <word name="MIME::QuotedPrint"/>
            <word name="MLDBM"/>
            <word name="Mail::POP3Client"/>
            <word name="Math::Approx"/>
            <word name="Math::BigFloat"/>
            <word name="Math::BigInt"/>
            <word name="Math::Complex"/>
            <word name="Math::Kleene"/>
            <word name="Math::Matrix"/>
            <word name="Math::MatrixBool"/>
            <word name="Math::MatrixReal"/>
            <word name="Math::Trig"/>
            <word name="Mozilla::API"/>
            <word name="Mozilla::Conn"/>
            <word name="Mozilla::Entry"/>
            <word name="Mozilla::LDAP"/>
            <word name="Mozilla::LDIF"/>
            <word name="Mozilla::Utils"/>
            <word name="Mysql"/>
            <word name="NDBM_File"/>
            <word name="NNML::Server"/>
            <word name="Net::Bind"/>
            <word name="Net::Bind::Resolv"/>
            <word name="Net::Bind::Utils"/>
            <word name="Net::Cmd"/>
            <word name="Net::DNS"/>
            <word name="Net::DNS::Header"/>
            <word name="Net::DNS::Packet"/>
            <word name="Net::DNS::Question"/>
            <word name="Net::DNS::RR"/>
            <word name="Net::DNS::RR::A"/>
            <word name="Net::DNS::RR::AAAA"/>
            <word name="Net::DNS::RR::AFSDB"/>
            <word name="Net::DNS::RR::CNAME"/>
            <word name="Net::DNS::RR::EID"/>
            <word name="Net::DNS::RR::HINFO"/>
            <word name="Net::DNS::RR::ISDN"/>
            <word name="Net::DNS::RR::LOC"/>
            <word name="Net::DNS::RR::MB"/>
            <word name="Net::DNS::RR::MG"/>
            <word name="Net::DNS::RR::MINFO"/>
            <word name="Net::DNS::RR::MR"/>
            <word name="Net::DNS::RR::MX"/>
            <word name="Net::DNS::RR::NAPTR"/>
            <word name="Net::DNS::RR::NIMLOC"/>
            <word name="Net::DNS::RR::NS"/>
            <word name="Net::DNS::RR::NSAP"/>
            <word name="Net::DNS::RR::NULL"/>
            <word name="Net::DNS::RR::PTR"/>
            <word name="Net::DNS::RR::PX"/>
            <word name="Net::DNS::RR::RP"/>
            <word name="Net::DNS::RR::RT"/>
            <word name="Net::DNS::RR::SOA"/>
            <word name="Net::DNS::RR::SRV"/>
            <word name="Net::DNS::RR::TXT"/>
            <word name="Net::DNS::RR::X25"/>
            <word name="Net::DNS::Resolver"/>
            <word name="Net::DNS::Update"/>
            <word name="Net::Domain"/>
            <word name="Net::DummyInetd"/>
            <word name="Net::FTP"/>
            <word name="Net::LDAP"/>
            <word name="Net::LDAP::BER"/>
            <word name="Net::LDAP::Constant"/>
            <word name="Net::LDAP::Entry"/>
            <word name="Net::LDAP::Filter"/>
            <word name="Net::LDAP::LDIF"/>
            <word name="Net::LDAP::Message"/>
            <word name="Net::LDAP::Reference"/>
            <word name="Net::LDAP::Search"/>
            <word name="Net::LDAP::Util"/>
            <word name="Net::NNTP"/>
            <word name="Net::Netrc"/>
            <word name="Net::PH"/>
            <word name="Net::POP3"/>
            <word name="Net::Ping"/>
            <word name="Net::Ping"/>
            <word name="Net::SMTP"/>
            <word name="Net::SNPP"/>
            <word name="Net::Telnet"/>
            <word name="Net::Time"/>
            <word name="Net::Whois"/>
            <word name="Net::hostent"/>
            <word name="Net::netent"/>
            <word name="Net::protoent"/>
            <word name="Net::servent"/>
            <word name="Netscape::History"/>
            <word name="Netscape::HistoryURL"/>
            <word name="News::NNTPClient"/>
            <word name="News::Newsrc"/>
            <word name="O"/>
            <word name="ODBM_File"/>
            <word name="Opcode"/>
            <word name="Oraperl"/>
            <word name="POE"/>
            <word name="POE::Driver"/>
            <word name="POE::Driver::SysRW"/>
            <word name="POE::Filter"/>
            <word name="POE::Filter::HTTPD"/>
            <word name="POE::Filter::Line"/>
            <word name="POE::Filter::Reference"/>
            <word name="POE::Filter::Stream"/>
            <word name="POE::Kernel"/>
            <word name="POE::Session"/>
            <word name="POE::Wheel"/>
            <word name="POE::Wheel::FollowTail"/>
            <word name="POE::Wheel::ListenAccept"/>
            <word name="POE::Wheel::ReadWrite"/>
            <word name="POE::Wheel::SocketFactory"/>
            <word name="POSIX"/>
            <word name="PPM"/>
            <word name="PPM::SOAPClient"/>
            <word name="PPM::SOAPServer"/>
            <word name="Parse::Yapp"/>
            <word name="Penguin::Easy"/>
            <word name="Pod::Checker"/>
            <word name="Pod::Find"/>
            <word name="Pod::Html"/>
            <word name="Pod::InputObjects"/>
            <word name="Pod::Man"/>
            <word name="Pod::ParseUtils"/>
            <word name="Pod::Parser"/>
            <word name="Pod::PerlEz"/>
            <word name="Pod::Plainer"/>
            <word name="Pod::Select"/>
            <word name="Pod::Text"/>
            <word name="Pod::Text::Color"/>
            <word name="Pod::Text::Termcap"/>
            <word name="Pod::Usage"/>
            <word name="Pod::Win32"/>
            <word name="Roman"/>
            <word name="SDBM_File"/>
            <word name="SGMLS"/>
            <word name="SGMLS::Output"/>
            <word name="SGMLS::Refs"/>
            <word name="SHA"/>
            <word name="SOAP"/>
            <word name="SOAP::Defs"/>
            <word name="SOAP::Envelope"/>
            <word name="SOAP::EnvelopeMaker"/>
            <word name="SOAP::GenericHashSerializer"/>
            <word name="SOAP::GenericInputStream"/>
            <word name="SOAP::GenericScalarSerializer"/>
            <word name="SOAP::OutputStream"/>
            <word name="SOAP::Packager"/>
            <word name="SOAP::Parser"/>
            <word name="SOAP::Transport::HTTP::Apache"/>
            <word name="SOAP::Transport::HTTP::CGI"/>
            <word name="SOAP::Transport::HTTP::Client"/>
            <word name="SOAP::Transport::HTTP::Server"/>
            <word name="SOAP::TypeMapper"/>
            <word name="SQL::Eval"/>
            <word name="SQL::Statement"/>
            <word name="Safe"/>
            <word name="Search::Dict"/>
            <word name="SelectSaver"/>
            <word name="SelfLoader"/>
            <word name="Set::IntRange"/>
            <word name="Set::IntSpan"/>
            <word name="Set::Object"/>
            <word name="Set::Scalar"/>
            <word name="Set::Scalar::Base"/>
            <word name="Set::Scalar::Real"/>
            <word name="Set::Scalar::Universe"/>
            <word name="Set::Scalar::Valued"/>
            <word name="Set::Scalar::ValuedUniverse"/>
            <word name="Set::Scalar::Virtual"/>
            <word name="Shell"/>
            <word name="Socket"/>
            <word name="Sort::PolySort"/>
            <word name="Statistics::ChiSquare"/>
            <word name="Statistics::Descriptive"/>
            <word name="Storable"/>
            <word name="String::BitCount"/>
            <word name="String::CRC"/>
            <word name="String::Parity"/>
            <word name="String::Scanf"/>
            <word name="Sybase::BCP"/>
            <word name="Symbol"/>
            <word name="Sys::Hostname"/>
            <word name="Sys::Syslog"/>
            <word name="Term::ANSIColor"/>
            <word name="Term::Cap"/>
            <word name="Term::Complete"/>
            <word name="Term::ReadKey"/>
            <word name="Term::ReadLine"/>
            <word name="Test"/>
            <word name="Test::Harness"/>
            <word name="Text::Abbrev"/>
            <word name="Text::CSV_XS"/>
            <word name="Text::German"/>
            <word name="Text::Metaphone"/>
            <word name="Text::ParseWords"/>
            <word name="Text::Soundex"/>
            <word name="Text::Striphigh"/>
            <word name="Text::Tabs"/>
            <word name="Text::Template"/>
            <word name="Text::Vpp"/>
            <word name="Text::Wrap"/>
            <word name="Thread"/>
            <word name="Thread::Queue"/>
            <word name="Thread::Semaphore"/>
            <word name="Thread::Signal"/>
            <word name="Thread::Specific"/>
            <word name="Tie::Array"/>
            <word name="Tie::CPHash"/>
            <word name="Tie::Dir"/>
            <word name="Tie::Handle"/>
            <word name="Tie::Hash"/>
            <word name="Tie::IxHash"/>
            <word name="Tie::RefHash"/>
            <word name="Tie::Scalar"/>
            <word name="Tie::SubstrHash"/>
            <word name="Tie::Watch"/>
            <word name="Time::HiRes"/>
            <word name="Time::Local"/>
            <word name="Time::Period"/>
            <word name="Time::Zone"/>
            <word name="Time::gmtime"/>
            <word name="Time::localtime"/>
            <word name="Time::tm"/>
            <word name="Tk"/>
            <word name="Tk::Adjuster"/>
            <word name="Tk::After"/>
            <word name="Tk::Animation"/>
            <word name="Tk::Balloon"/>
            <word name="Tk::Bitmap"/>
            <word name="Tk::BrowseEntry"/>
            <word name="Tk::Button"/>
            <word name="Tk::Canvas"/>
            <word name="Tk::Checkbutton"/>
            <word name="Tk::Clipboard"/>
            <word name="Tk::Cloth"/>
            <word name="Tk::CmdLine"/>
            <word name="Tk::ColorEditor"/>
            <word name="Tk::Common"/>
            <word name="Tk::Compound"/>
            <word name="Tk::DItem"/>
            <word name="Tk::Derived"/>
            <word name="Tk::Dialog"/>
            <word name="Tk::DialogBox"/>
            <word name="Tk::DirTree"/>
            <word name="Tk::DropSite"/>
            <word name="Tk::Entry"/>
            <word name="Tk::Error"/>
            <word name="Tk::Eventloop"/>
            <word name="Tk::FileSelect"/>
            <word name="Tk::FireButton"/>
            <word name="Tk::Font"/>
            <word name="Tk::Frame"/>
            <word name="Tk::HList"/>
            <word name="Tk::IO"/>
            <word name="Tk::Image"/>
            <word name="Tk::InputO"/>
            <word name="Tk::Internals"/>
            <word name="Tk::Item"/>
            <word name="Tk::LabFrame"/>
            <word name="Tk::Label"/>
            <word name="Tk::Listbox"/>
            <word name="Tk::MainWindow"/>
            <word name="Tk::Menu"/>
            <word name="Tk::Menubutton"/>
            <word name="Tk::Message"/>
            <word name="Tk::Mwm"/>
            <word name="Tk::NoteBook"/>
            <word name="Tk::NumEntry"/>
            <word name="Tk::NumEntryPlain"/>
            <word name="Tk::ObjScanner"/>
            <word name="Tk::Optionmenu"/>
            <word name="Tk::Pane"/>
            <word name="Tk::Photo"/>
            <word name="Tk::Pixmap"/>
            <word name="Tk::ProgressBar"/>
            <word name="Tk::ROText"/>
            <word name="Tk::Radiobutton"/>
            <word name="Tk::Reindex"/>
            <word name="Tk::Scale"/>
            <word name="Tk::Scrollbar"/>
            <word name="Tk::Scrolled"/>
            <word name="Tk::Submethods"/>
            <word name="Tk::SunConst"/>
            <word name="Tk::TFrame"/>
            <word name="Tk::TList"/>
            <word name="Tk::Table"/>
            <word name="Tk::Text"/>
            <word name="Tk::TextUndo"/>
            <word name="Tk::Tiler"/>
            <word name="Tk::TixGrid"/>
            <word name="Tk::Toplevel"/>
            <word name="Tk::Tree"/>
            <word name="Tk::Widget"/>
            <word name="Tk::WinPhoto"/>
            <word name="Tk::Wm"/>
            <word name="Tk::X"/>
            <word name="Tk::X11Font"/>
            <word name="Tk::Xrm"/>
            <word name="Tk::bind"/>
            <word name="Tk::bindtags"/>
            <word name="Tk::callbacks"/>
            <word name="Tk::chooseColor"/>
            <word name="Tk::composite"/>
            <word name="Tk::configspec"/>
            <word name="Tk::event"/>
            <word name="Tk::exit"/>
            <word name="Tk::fileevent"/>
            <word name="Tk::focus"/>
            <word name="Tk::form"/>
            <word name="Tk::getOpenFile"/>
            <word name="Tk::grab"/>
            <word name="Tk::grid"/>
            <word name="Tk::mega"/>
            <word name="Tk::messageBox"/>
            <word name="Tk::option"/>
            <word name="Tk::options"/>
            <word name="Tk::overview"/>
            <word name="Tk::pTk"/>
            <word name="Tk::pack"/>
            <word name="Tk::palette"/>
            <word name="Tk::place"/>
            <word name="Tk::selection"/>
            <word name="Tk::send"/>
            <word name="Tk::tixWm"/>
            <word name="Tk::tkvars"/>
            <word name="Tk::widgets"/>
            <word name="URI"/>
            <word name="URI::Escape"/>
            <word name="URI::Heuristic"/>
            <word name="URI::URL"/>
            <word name="URI::URL::ldap"/>
            <word name="URI::WithBase"/>
            <word name="URI::data"/>
            <word name="URI::file"/>
            <word name="URI::ldap"/>
            <word name="User::grent"/>
            <word name="User::pwent"/>
            <word name="WWW::RobotRules"/>
            <word name="WWW::RobotRules::AnyDBM_File"/>
            <word name="WWW::Search"/>
            <word name="WWW::Search::AOL::Classifieds::Employment"/>
            <word name="WWW::Search::AltaVista"/>
            <word name="WWW::Search::AltaVista::AdvancedNews"/>
            <word name="WWW::Search::AltaVista::AdvancedWeb"/>
            <word name="WWW::Search::AltaVista::Careers"/>
            <word name="WWW::Search::AltaVista::Intranet"/>
            <word name="WWW::Search::AltaVista::News"/>
            <word name="WWW::Search::AltaVista::Web"/>
            <word name="WWW::Search::Crawler"/>
            <word name="WWW::Search::Dice"/>
            <word name="WWW::Search::Euroseek"/>
            <word name="WWW::Search::Excite::News"/>
            <word name="WWW::Search::ExciteForWebServers"/>
            <word name="WWW::Search::Fireball"/>
            <word name="WWW::Search::FolioViews"/>
            <word name="WWW::Search::GoTo"/>
            <word name="WWW::Search::Google"/>
            <word name="WWW::Search::Gopher"/>
            <word name="WWW::Search::HeadHunter"/>
            <word name="WWW::Search::HotFiles"/>
            <word name="WWW::Search::Infoseek"/>
            <word name="WWW::Search::Infoseek::Companies"/>
            <word name="WWW::Search::Infoseek::Email"/>
            <word name="WWW::Search::Infoseek::News"/>
            <word name="WWW::Search::Infoseek::Web"/>
            <word name="WWW::Search::Livelink"/>
            <word name="WWW::Search::LookSmart"/>
            <word name="WWW::Search::Lycos"/>
            <word name="WWW::Search::Lycos::Pages"/>
            <word name="WWW::Search::Lycos::Sites"/>
            <word name="WWW::Search::MSIndexServer"/>
            <word name="WWW::Search::Magellan"/>
            <word name="WWW::Search::MetaCrawler"/>
            <word name="WWW::Search::Metapedia"/>
            <word name="WWW::Search::Monster"/>
            <word name="WWW::Search::NetFind"/>
            <word name="WWW::Search::NorthernLight"/>
            <word name="WWW::Search::Null"/>
            <word name="WWW::Search::OpenDirectory"/>
            <word name="WWW::Search::PLweb"/>
            <word name="WWW::Search::SFgate"/>
            <word name="WWW::Search::Search97"/>
            <word name="WWW::Search::Simple"/>
            <word name="WWW::Search::Snap"/>
            <word name="WWW::Search::Test"/>
            <word name="WWW::Search::Verity"/>
            <word name="WWW::Search::WebCrawler"/>
            <word name="WWW::Search::Yahoo::Classifieds::Employment"/>
            <word name="WWW::Search::ZDNet"/>
            <word name="WWW::SearchResult"/>
            <word name="Win32"/>
            <word name="Win32::API"/>
            <word name="Win32::AuthenticateUser"/>
            <word name="Win32::ChangeNotify"/>
            <word name="Win32::Console"/>
            <word name="Win32::DBIODBC"/>
            <word name="Win32::Event"/>
            <word name="Win32::EventLog"/>
            <word name="Win32::File"/>
            <word name="Win32::FileSecurity"/>
            <word name="Win32::IPC"/>
            <word name="Win32::Internet"/>
            <word name="Win32::Mutex"/>
            <word name="Win32::NetAdmin"/>
            <word name="Win32::NetResource"/>
            <word name="Win32::ODBC"/>
            <word name="Win32::OLE"/>
            <word name="Win32::OLE::Const"/>
            <word name="Win32::OLE::Enum"/>
            <word name="Win32::OLE::NEWS"/>
            <word name="Win32::OLE::NLS"/>
            <word name="Win32::OLE::Variant"/>
            <word name="Win32::PerfLib"/>
            <word name="Win32::Pipe"/>
            <word name="Win32::Process"/>
            <word name="Win32::Semaphore"/>
            <word name="Win32::Service"/>
            <word name="Win32::Sound"/>
            <word name="Win32::TieRegistry"/>
            <word name="Win32API::File"/>
            <word name="Win32API::Net"/>
            <word name="Win32API::Registry"/>
            <word name="X11::Auth"/>
            <word name="X11::Keysyms"/>
            <word name="X11::Protocol"/>
            <word name="X11::Protocol::Connection"/>
            <word name="X11::Protocol::Connection::FileHandle"/>
            <word name="X11::Protocol::Connection::INETFH"/>
            <word name="X11::Protocol::Connection::INETSocket"/>
            <word name="X11::Protocol::Connection::Socket"/>
            <word name="X11::Protocol::Connection::UNIXFH"/>
            <word name="X11::Protocol::Connection::UNIXSocket"/>
            <word name="X11::Protocol::Ext::BIG_REQUESTS"/>
            <word name="X11::Protocol::Ext::SHAPE"/>
            <word name="XML::DOM"/>
            <word name="XML::Element"/>
            <word name="XML::PPD"/>
            <word name="XML::PPMConfig"/>
            <word name="XML::Parser"/>
            <word name="XML::Parser::Expat"/>
            <word name="XML::ValidatingElement"/>
            <word name="XSLoader"/>
            <word name="attributes"/>
            <word name="attrs"/>
            <word name="autouse"/>
            <word name="base"/>
            <word name="blib"/>
            <word name="bytes"/>
            <word name="charnames"/>
            <word name="constant"/>
            <word name="diagnostics"/>
            <word name="fields"/>
            <word name="filetest"/>
            <word name="import"/>
            <word name="integer"/>
            <word name="less"/>
            <word name="lib"/>
            <word name="locale"/>
            <word name="lwpcook"/>
            <word name="ops"/>
            <word name="overload"/>
            <word name="re"/>
            <word name="sigtrap"/>
            <word name="strict"/>
            <word name="subs"/>
            <word name="utf8"/>
            <word name="vars"/>
            <word name="warnings"/>
         </keywords>
      </scheme>

   </type>
</hrc>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Colorer Library.
   -
   - The Initial Developer of the Original Code is
   - Cail Lomecb <cail@nm.ru>.
   - Portions created by the Initial Developer are Copyright (C) 1999-2003
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

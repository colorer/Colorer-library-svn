<?xml version="1.0"?>
<project default="all" basedir=".">

  <xmlcatalog id="DTDs">
    <dtd publicid="-//OASIS//DTD DocBook XML V4.1.2//EN"
         location="docbook/docbookx.dtd"/>
    <dtd publicid="-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN"
         location="web-app_2_2.dtd"/>
    <dtd publicid="-//Cail Lomecb//DTD Colorer HRC take5//EN"
         location="${project-root}/src/dtd/hrc.dtd"/>
    <dtd publicid="-//Cail Lomecb//DTD Colorer HRD take5//EN"
         location="${project-root}/src/dtd/hrd.dtd"/>
    <dtd publicid="-//Cail Lomecb//DTD Colorer CATALOG take5//EN"
         location="${project-root}/src/dtd/catalog.dtd"/>
  </xmlcatalog>

  <import file="../common.xml" optional="true"/>
  <fail unless='docroot'>
    *** CONFIG FILE ../common.xml IS NOT FOUND ***
  </fail>
  
  <property name='build-dir' value='${docroot}/build'/>
  <property name='docbook-dir-url' value='file:/${docbook-dir}'/>

  <macrodef name="xslt-hrc-ref">
    <attribute name="in"/>
    <attribute name="out"/>
    <attribute name="style"/>
    <sequential>
      <xslt in="@{in}" out="@{out}" style="@{style}">
        <xmlcatalog refid="DTDs"/>
        <classpath>
          <pathelement path="${xslt-classpath}"/>
        </classpath>
      </xslt>
    </sequential>
  </macrodef>

  <target name="init">
    <mkdir dir="${build-dir}" />
    
    <uptodate property="pdf.required" targetfile="${build-dir}/hrc-ref.pdf">
      <srcfiles dir="." includes = "hrc-ref*.docbook"/>
    </uptodate>
    <uptodate property="html.required" targetfile="${build-dir}/index.html">
      <srcfiles dir="." includes = "hrc-ref*.docbook"/>
    </uptodate>

    <dependset>
      <srcfileset dir="." includes = "${build-dir}/hrc-ref*.docbook"/>
      <targetfileset dir="." includes="${build-dir}/hrc-ref.docbook-merged"/>
    </dependset>

    <available file='${docbook-dir}/template/titlepage.xsl' property='xslt-exists'/>
    <available file='${fop-dir}/build/fop.jar' property='pdf-exists'/>
    <condition property='hrc-ref-available'>
      <and>
        <isset property='xslt-exists'/>
        <isset property='pdf-exists'/>
      </and>
    </condition>

    <antcall target='hrc-ref-check'/>
  </target>

  <target name="hrc-ref-check" unless='hrc-ref-available'>
    <echo>
* ********** WARNING!!! *************
* Can't find hrc-ref generation dependencies.
* Check paths to DocBook XSL Templates and FOP PDF processor
* in 'common.xml' config file:
*
* DocBook XSL: ${docbook-dir}
* Apache  FOP: ${fop-dir}
*
* You can ignore this build error, setting 'fail-on-bad-paths'
* property in 'common.xml' to false.
    </echo>
    <fail if='fail-on-badpaths'>
******** Build stopped because of bad DocBook XSLT/Apache FOP paths.
    </fail>
  </target>

  <target name="merge">
    <xslt-hrc-ref in='hrc-ref.docbook' out='${build-dir}/hrc-ref.docbook-merged' style='db-merge.xsl'/>
  </target>
  
  <target name="pdf" if='hrc-ref-available' depends='init, merge' description='Builds PDF presentation' unless='pdf.required'>
    <xslt-hrc-ref in='fo-titlepage.tmpl' out='${build-dir}/fo-titlepage.xsl' style='${docbook-dir}/template/titlepage.xsl'/>

    <copy file='fo-hrc-ref.xsl.tmpl' tofile='${build-dir}/fo-hrc-ref.xsl' overwrite='true'>
     <filterset>
       <filter token="docbook-dir" value="${docbook-dir-url}"/>
      </filterset>
    </copy>

    <xslt-hrc-ref in='${build-dir}/hrc-ref.docbook-merged' out='${build-dir}/hrc-ref.fo' style='${build-dir}/fo-hrc-ref.xsl'/>
    <delete file='${build-dir}/fo-hrc-ref.xsl'/>
    <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
      <classpath>
        <pathelement location="${fop-dir}/build/fop.jar"/>
        <fileset dir="${fop-dir}/lib" includes="*.jar"/>
      </classpath>
    </taskdef>
    <fop format="application/pdf" fofile="${build-dir}/hrc-ref.fo" outfile="${build-dir}/hrc-ref.pdf"/>
  </target>

  <!-- TODO add Colorer as DocBook's highlighting engine -->
  <target name="html" if='xslt-exists' depends='init, merge' description='Builds HTML presentation' unless='html.required'>
    <mkdir dir="${build-dir}/html"/>
    <xslt-hrc-ref in='html-titlepage.tmpl' out='${build-dir}/html-titlepage.xsl' style='${docbook-dir}/template/titlepage.xsl'/>
    
    <copy file='html-hrc-ref.xsl.tmpl' tofile='${build-dir}/html-hrc-ref.xsl' overwrite='true'>
     <filterset>
       <filter token="docbook-dir" value="${docbook-dir-url}"/>
     </filterset>
    </copy>
    
    <xslt-hrc-ref in='${build-dir}/hrc-ref.docbook-merged' out='${build-dir}/html/index.html' style='${build-dir}/html-hrc-ref.xsl'/>
    <delete file='${build-dir}/html-hrc-ref.xsl'/>
  </target>

  <target name="zip" description='Creates zip distribution file'>
    <zip destfile="${build-dir}/hrc-ref.zip"
         basedir="${build-dir}/"
         includes="html/*, hrc-ref.pdf"
    />
  </target>

  <target name="all" depends='init, html, pdf, zip' description='Builds all target versions'>
  </target>

  <target name="clean" description='Removes all autogenerated files'>
    <delete>
      <fileset dir='${build-dir}' includes='hrc-ref.zip,fo-titlepage.xsl,hrc-ref.docbook-merged,hrc-ref.fo,hrc-ref.pdf,html-titlepage.xsl,html,*-temporary*'/>
    </delete>
  </target>

</project>
